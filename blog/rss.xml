<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Joep Schuurkes</title><link>https://smallsheds.garden/</link><description>Joep Schuurkes</description><atom:link href="https://smallsheds.garden/blog/rss.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><copyright>Contents © 2023 &lt;a href="mailto:site@joep.slmail.me"&gt;Joep Schuurkes&lt;/a&gt; 
&lt;a href="https://creativecommons.org/licenses/by/4.0/" rel="nofollow" target="_blank"&gt;
&lt;img alt="Creative Commons License" style="border-width:0;margin: 0px 0px 0px 0px" src="https://licensebuttons.net/l/by/4.0/80x15.png" /&gt;
&lt;/a&gt;
</copyright><lastBuildDate>Mon, 11 Sep 2023 10:40:56 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>"Agile history, it matters, right?" at FroGS conf</title><link>https://smallsheds.garden/blog/2023/agile-history-it-matters-right-at-frogs-conf/</link><dc:creator>Joep Schuurkes</dc:creator><description>&lt;figure&gt;&lt;img src="https://smallsheds.garden/images/2023/agile-history/frogsconf.nl"&gt;&lt;/figure&gt; &lt;div&gt;&lt;p&gt;On September 9th I facilitated a session at the &lt;a href="https://frogsconf.nl/"&gt;FroGS conf&lt;/a&gt; open space titled "&lt;em&gt;Agile history, it matters, right?&lt;/em&gt;" My main goal was to get input on where to take my &lt;a href="https://context-of-agile.org/"&gt;Context of Agile&lt;/a&gt; site. Before asking for that input, however, I asked the participants three questions about the history of Agile. I figured it would provide a good introduction to the topic. And I was curious how much the kind of person that joins a session like this, knows about the history of Agile. So a big thank you to all the participants!&lt;/p&gt;
&lt;h2&gt;The three questions about the history of Agile&lt;/h2&gt;
&lt;p&gt;The three questions about the history of Agile were:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;When did Agile start?&lt;/li&gt;
&lt;li&gt;What lightweight methodologies were represented at the Manifesto meeting?&lt;/li&gt;
&lt;li&gt;What did the software development look like that Agile was reacting against?&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href="https://smallsheds.garden/blog/2023/agile-history-it-matters-right-at-frogs-conf/"&gt;Read more…&lt;/a&gt; (6 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>agile</category><category>agile manifesto</category><category>conferences</category><guid>https://smallsheds.garden/blog/2023/agile-history-it-matters-right-at-frogs-conf/</guid><pubDate>Mon, 11 Sep 2023 07:48:40 GMT</pubDate></item><item><title>My seven-month experiment of sharing weekly notes at work</title><link>https://smallsheds.garden/blog/2023/my-seven-month-experiment-of-sharing-weekly-notes-at-work/</link><dc:creator>Joep Schuurkes</dc:creator><description>&lt;div&gt;&lt;p&gt;At the end of my first week at my last job I published a Notion page that started with:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Inspired by &lt;a href="https://agilecommshandbook.com/"&gt;"The agile comms handbook"&lt;/a&gt; I'm experimenting with a &lt;strong&gt;weekly (internal) blog&lt;/strong&gt;. No big promises on the content, just the things I feel like writing about at the end of my week. And as this is an experiment, things might change along the way.&lt;/p&gt;
&lt;p&gt;Please feel free to add a &lt;strong&gt;comment, respond&lt;/strong&gt; to other people's comments and/or &lt;strong&gt;share&lt;/strong&gt; with others!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;In this post, I'll tell the story of my eight-month experiment with weekly notes. After that, I'll share some tips in case you want to give weekly notes a try too.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://smallsheds.garden/blog/2023/my-seven-month-experiment-of-sharing-weekly-notes-at-work/"&gt;Read more…&lt;/a&gt; (5 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>agile comms</category><category>note-taking</category><guid>https://smallsheds.garden/blog/2023/my-seven-month-experiment-of-sharing-weekly-notes-at-work/</guid><pubDate>Sun, 03 Sep 2023 10:35:40 GMT</pubDate></item><item><title>Scrum master or scrum mascot?</title><link>https://smallsheds.garden/blog/2023/scrum-master-or-scrum-mascot/</link><dc:creator>Joep Schuurkes</dc:creator><description>&lt;figure&gt;&lt;img src="https://smallsheds.garden/images/2023/scrum-master-or-scrum-mascot/scrum-master-quadrants.png"&gt;&lt;/figure&gt; &lt;div&gt;&lt;p&gt;During our latest monthly call, &lt;a href="https://maaretp.com/"&gt;Maaret Pyhäjärvi&lt;/a&gt; and I spent some of our time discussing agency, accountability and scrum masters. At one point I said something along the lines of:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Scrum masters often end up as scrum mascots.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Maaret said I should write a blog post about scrum mascots&lt;sup id="fnref:1"&gt;&lt;a class="footnote-ref" href="https://smallsheds.garden/blog/2023/scrum-master-or-scrum-mascot/#fn:1"&gt;1&lt;/a&gt;&lt;/sup&gt;, so here we are.&lt;/p&gt;
&lt;p&gt;According to the &lt;a href="https://scrumguides.org/scrum-guide.html#scrum-master"&gt;2020 Scrum Guide&lt;/a&gt; a Scrum Master&lt;sup id="fnref:2"&gt;&lt;a class="footnote-ref" href="https://smallsheds.garden/blog/2023/scrum-master-or-scrum-mascot/#fn:2"&gt;2&lt;/a&gt;&lt;/sup&gt; is accountable for two things:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;"establishing Scrum as defined in the Scrum Guide"&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;"the Scrum Team's effectiveness"&lt;/em&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Accountability implies (or rather: should imply) corresponding authority. You're being held accountable for certain outcomes *and* you have sufficient power to influence those outcomes. That's a scrum master. A scrum mascot is a very different beast: they have neither power nor accountability. And yet that seems to be what a lot of organizations (and scrum masters?) want.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://smallsheds.garden/blog/2023/scrum-master-or-scrum-mascot/"&gt;Read more…&lt;/a&gt; (3 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>agile</category><category>management</category><category>scrum</category><guid>https://smallsheds.garden/blog/2023/scrum-master-or-scrum-mascot/</guid><pubDate>Wed, 23 Aug 2023 11:17:40 GMT</pubDate></item><item><title>What is a scrum master?</title><link>https://smallsheds.garden/blog/2023/what-is-a-scrum-master/</link><dc:creator>Joep Schuurkes</dc:creator><description>&lt;div&gt;&lt;p&gt;Recently I applied to two scrum master jobs and it got me thinking: what is a scrum master? What is it exactly that they do?&lt;/p&gt;
&lt;p&gt;What made this question even more pertinent to me (apart from the job applications) is that in the past I have been a scrum master. But that was five years ago and none of my jobs since had much involvement of a scrum master. And my experiences of those past five years made me wonder: where exactly does a scrum master fit in?&lt;/p&gt;
&lt;h2&gt;A scrum master is the Scrum boss&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://scrumguides.org/scrum-guide.html#scrum-master"&gt;The 2020 Scrum Guide&lt;/a&gt; says:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The Scrum Master is accountable for establishing Scrum as defined in the Scrum Guide. They do this by helping everyone understand Scrum theory and practice, both within the Scrum Team and the organization.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href="https://smallsheds.garden/blog/2023/what-is-a-scrum-master/"&gt;Read more…&lt;/a&gt; (9 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>agile</category><category>management</category><category>scrum</category><guid>https://smallsheds.garden/blog/2023/what-is-a-scrum-master/</guid><pubDate>Tue, 08 Aug 2023 12:04:40 GMT</pubDate></item><item><title>(clj 12) Core concepts of functional programming with Peg Thing</title><link>https://smallsheds.garden/blog/clojure/2023/clj-12-core-concepts-of-functional-programming-with-peg-thing/</link><dc:creator>Joep Schuurkes</dc:creator><description>&lt;div&gt;&lt;p&gt;Chapter 5 of "&lt;a href="https://www.braveclojure.com/clojure-for-the-brave-and-true/"&gt;Clojure for the Brave and True&lt;/a&gt;" explores two core concepts of functional programming: pure functions and immutable data structures. It wraps up with walking you through the &lt;a href="https://github.com/flyingmachine/pegthing"&gt;code&lt;/a&gt;&lt;sup id="fnref:1"&gt;&lt;a class="footnote-ref" href="https://smallsheds.garden/blog/clojure/2023/clj-12-core-concepts-of-functional-programming-with-peg-thing/#fn:1"&gt;1&lt;/a&gt;&lt;/sup&gt; of a game called &lt;a href="https://www.braveclojure.com/functional-programming/#Peg_Thing"&gt;"Peg Thing"&lt;/a&gt;&lt;sup id="fnref:2"&gt;&lt;a class="footnote-ref" href="https://smallsheds.garden/blog/clojure/2023/clj-12-core-concepts-of-functional-programming-with-peg-thing/#fn:2"&gt;2&lt;/a&gt;&lt;/sup&gt;, which uses &lt;em&gt;"everything you've learned so far: immutable data structures, lazy sequences, pure functions, recursion - everything!"&lt;/em&gt;&lt;/p&gt;
&lt;h2&gt;So what is this Peg Thing?&lt;/h2&gt;
&lt;p&gt;For a full description and the code of Peg Thing, you can follow the links in the paragraph above. In this post I'll only share what's relevant to describe what I learned about functional programming through Peg Thing.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://smallsheds.garden/blog/clojure/2023/clj-12-core-concepts-of-functional-programming-with-peg-thing/"&gt;Read more…&lt;/a&gt; (8 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>brave clojure</category><category>clojure</category><category>programming</category><guid>https://smallsheds.garden/blog/clojure/2023/clj-12-core-concepts-of-functional-programming-with-peg-thing/</guid><pubDate>Sun, 06 Aug 2023 13:13:36 GMT</pubDate></item><item><title>I'm a quality engineer and I'm not sure how I feel about that</title><link>https://smallsheds.garden/blog/2023/im-a-quality-engineer-and-im-not-sure-how-i-feel-about-that/</link><dc:creator>Joep Schuurkes</dc:creator><description>&lt;div&gt;&lt;p&gt;This post is a slightly edited version of the experience report I &lt;a class="reference external" href="https://smallsheds.garden/slides/xp2023-quality-engineer.html"&gt;presented&lt;/a&gt; at the &lt;a class="reference external" href="https://www.agilealliance.org/xp2023/"&gt;xp2023&lt;/a&gt; conference. It covers my first six months at a scale-up, working as a quality engineer for the first time - after having worked in other testing-related roles for 15+ years.&lt;/p&gt;
&lt;p&gt;My main finding is that for a quality engineering role to work well, certain structures need to be in place. The most important one is that the impact the quality engineer is expected to have, is clear to both the quality engineer and the team(s) they are supporting. However, regardless of which structures you put in place, a quality engineer will also need to work around those structures to be fully effective.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://smallsheds.garden/blog/2023/im-a-quality-engineer-and-im-not-sure-how-i-feel-about-that/"&gt;Read more…&lt;/a&gt; (22 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>agile</category><category>conferences</category><category>leadership</category><category>management</category><category>quality engineering</category><category>software testing</category><guid>https://smallsheds.garden/blog/2023/im-a-quality-engineer-and-im-not-sure-how-i-feel-about-that/</guid><pubDate>Wed, 05 Jul 2023 09:42:34 GMT</pubDate></item><item><title>Making meetings work</title><link>https://smallsheds.garden/blog/2023/making-meetings-work/</link><dc:creator>Joep Schuurkes</dc:creator><description>&lt;figure&gt;&lt;img src="https://smallsheds.garden/images/2023/making-meetings-work/venn-meeting.png"&gt;&lt;/figure&gt; &lt;div&gt;&lt;p&gt;Too often I've heard people say: &lt;em&gt;"Oh no, not another meeting!"&lt;/em&gt; Usually this means they feel their time at work is split between time in meetings and time in which they do actual work. And to be fair, they have a point. I too have been in plenty of meetings that didn't achieve much of anything. It doesn't have to be this way, however. Meetings can be effective and they can leave you with a real sense of having accomplished something. And in this post I'll explain how to make that happen.&lt;/p&gt;
&lt;h2&gt;We struggle with meetings&lt;/h2&gt;
&lt;div class="row"&gt;
    &lt;div class="col-md-4"&gt;
        &lt;figure class="figure"&gt;
            &lt;img src="https://smallsheds.garden/images/2023/making-meetings-work/sisyphus-titian.jpg" class="figure-img img-fluid rounded" alt="Sisyphus by Titian"&gt;
            &lt;figcaption class="figure-caption text-center"&gt;Sisyphus by Titian&lt;/figcaption&gt;
        &lt;/figure&gt;
    &lt;/div&gt;
    &lt;div class="col-md-8"&gt;
            &lt;p style="margin-top:10px"&gt;We struggle with meetings. On the one hand we keep proposing them, scheduling them, attending them. On the other hand we keep complaining about them. We feel sorry for people with a day full of meetings. When a meeting ends early, we &lt;em&gt;"get 10 minutes of our lives back"&lt;/em&gt;.&lt;/p&gt;
            &lt;p&gt;To that &lt;a href="https://twitter.com/j19sch/status/1179798961131012096"&gt;I say&lt;/a&gt;:&lt;/p&gt;
            &lt;blockquote&gt;
                &lt;p&gt;&lt;em&gt;If you feel you do all your work outside of meetings, you're meeting wrong.&lt;/em&gt;&lt;/p&gt;
            &lt;/blockquote&gt;
            &lt;p&gt;It's something I realized while I was a scrum master: my work happens during meetings. Mostly team meetings and 1-to-1s. There's prep before and follow-up after meetings, but I did the core of my job through meetings.&lt;/p&gt;
    &lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;&lt;a href="https://smallsheds.garden/blog/2023/making-meetings-work/"&gt;Read more…&lt;/a&gt; (9 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>facilitation</category><category>leadership</category><category>self-organization</category><category>sociocracy 3.0</category><guid>https://smallsheds.garden/blog/2023/making-meetings-work/</guid><pubDate>Tue, 30 May 2023 07:31:25 GMT</pubDate></item><item><title>My five favorite testing questions</title><link>https://smallsheds.garden/blog/2023/my-five-favorite-testing-questions/</link><dc:creator>Joep Schuurkes</dc:creator><description>&lt;div&gt;&lt;p&gt;Recently I realized there are a few testing questions I use a lot. They lie at the top of my testing toolbox, so to speak. Together they shape my testing style, making it easier for me to discover certain things, but probably also harder to find other kinds of things. So here are my five favorite testing questions, in no particular order.&lt;/p&gt;
&lt;h2&gt;What if there are zero, one, many, lots of this thing?&lt;/h2&gt;
&lt;p&gt;Last year I expressed my surprise &lt;a href="https://chaos.social/@joeposaurus/109427704814392787"&gt;on Mastodon&lt;/a&gt; how many times I've found bugs by asking the question: &lt;em&gt;"What if there are 0 / 1 / several / lots of this thing?"&lt;/em&gt; And if you're working closely enough to the code, you should also ask about "null".&lt;/p&gt;
&lt;p&gt;Quite a few people responded to my message. Turns out it's a &lt;a href="https://www.qwan.eu/2021/07/09/tdd-0-1-n.html"&gt;very&lt;/a&gt; &lt;a href="http://blog.wingman-sw.com/tdd-guided-by-zombies"&gt;common&lt;/a&gt; &lt;a href="https://mas.to/@zebulon/109428667658139893"&gt;pattern&lt;/a&gt; in TDD. And Brian Marick&lt;sup id="fnref:1"&gt;&lt;a class="footnote-ref" href="https://smallsheds.garden/blog/2023/my-five-favorite-testing-questions/#fn:1"&gt;1&lt;/a&gt;&lt;/sup&gt; remembered it &lt;a href="https://mstdn.social/@marick/109428042023981110"&gt;standing out&lt;/a&gt; when he was looking into fixed bugs in the Linux kernel they used in the '80s. Personally I learned it from Elisabeth Hendrickson's &lt;a href="https://web.archive.org/web/20150217124452/http://testobsessed.com/wp-content/uploads/2011/04/testheuristicscheatsheetv1.pdf"&gt;"Test Heuristics Cheat Sheet"&lt;/a&gt;, which found a &lt;a href="https://www.ministryoftesting.com/articles/ab1cd85c?s_id=14715206"&gt;new home&lt;/a&gt; last year at the Ministry of Testing.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://smallsheds.garden/blog/2023/my-five-favorite-testing-questions/"&gt;Read more…&lt;/a&gt; (6 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>exploratory testing</category><category>heuristics</category><category>software testing</category><guid>https://smallsheds.garden/blog/2023/my-five-favorite-testing-questions/</guid><pubDate>Wed, 03 May 2023 06:57:25 GMT</pubDate></item><item><title>A backlog item is a backlog item is a backlog item</title><link>https://smallsheds.garden/blog/2023/a-backlog-item-is-a-backlog-item-is-a-backlog-item/</link><dc:creator>Joep Schuurkes</dc:creator><description>&lt;div&gt;&lt;p&gt;Originally Scrum was very much about &lt;em&gt;"You tell us what needs building. We'll decide how we build it and how soon we'll deliver."&lt;/em&gt;&lt;sup id="fnref:1"&gt;&lt;a class="footnote-ref" href="https://smallsheds.garden/blog/2023/a-backlog-item-is-a-backlog-item-is-a-backlog-item/#fn:1"&gt;1&lt;/a&gt;&lt;/sup&gt; I've never seen that version of Scrum. The version I have seen, has a product manager try to get as many features into a sprint as reasonably possible - for varying degrees of reasonable. This comes at the expense of maintenance work, such as keeping libraries up-to-date or removing technical debt. And it incentivizes the team to cut corners on features, to not leave code in a better state than they found it, to not fix smaller bugs and instead log them somewhere for later.&lt;/p&gt;
&lt;p&gt;One solution I see to this problem, is to put an engineering manager fully in charge of the team.&lt;sup id="fnref:5"&gt;&lt;a class="footnote-ref" href="https://smallsheds.garden/blog/2023/a-backlog-item-is-a-backlog-item-is-a-backlog-item/#fn:5"&gt;2&lt;/a&gt;&lt;/sup&gt; The product manager prioritizes the features. The engineering manager prioritizes the full scope of work for the team. That's not a simple change to pull off, however.&lt;/p&gt;
&lt;p&gt;Another solution might be to change the way we use our backlogs. If a product manager gets to prioritize all the work, and the tool they use is a backlog, then we should make sure that all the work&lt;sup id="fnref:2"&gt;&lt;a class="footnote-ref" href="https://smallsheds.garden/blog/2023/a-backlog-item-is-a-backlog-item-is-a-backlog-item/#fn:2"&gt;3&lt;/a&gt;&lt;/sup&gt; is in the backlog: features, bugs, and technical debt. Let's take a look at each of these three categories of work.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://smallsheds.garden/blog/2023/a-backlog-item-is-a-backlog-item-is-a-backlog-item/"&gt;Read more…&lt;/a&gt; (7 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>agile</category><category>bugs</category><category>tech debt</category><category>work management</category><guid>https://smallsheds.garden/blog/2023/a-backlog-item-is-a-backlog-item-is-a-backlog-item/</guid><pubDate>Mon, 03 Apr 2023 06:51:25 GMT</pubDate></item><item><title>Metrics, models and conversations</title><link>https://smallsheds.garden/blog/2023/metrics-models-and-conversations/</link><dc:creator>Joep Schuurkes</dc:creator><description>&lt;div&gt;&lt;p&gt;A few weeks ago someone suggested we should start measuring how many automated test cases versus how many manual test cases we have. Luckily it was part of a longer list of suggested metrics and it was also presented in that way: a list of options, to be discussed later. And the reason I say "luckily" is because I knew I disagreed with using that metric, but didn't have a good explanation as to why. At that moment I could have given a minutes-long monologue about how that metric doesn't fit how I think we should be thinking about testing. However, I have zero expectations that such a monologue could have worked in that situation. It would be all over the place as I philosophize about testing and make all kinds of connections and analogies. A convincing argument that does not make.&lt;/p&gt;
&lt;p&gt;So since then, I've been thinking: how would I explain my position on measuring manual versus automated test cases? Something to the point, something relatable, something that acknowledges the need behind asking for this metric. And then it hit me: use cooking as an analogy. Now I know plenty of people have made this analogy before. However, I don't remember reading everything I will cover in this post somewhere else. Also, there's value in different people saying similar things, but each in their own voice.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://smallsheds.garden/blog/2023/metrics-models-and-conversations/"&gt;Read more…&lt;/a&gt; (4 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>measurements</category><category>metrics</category><category>test automation</category><category>tools</category><guid>https://smallsheds.garden/blog/2023/metrics-models-and-conversations/</guid><pubDate>Sun, 12 Mar 2023 09:11:25 GMT</pubDate></item></channel></rss>
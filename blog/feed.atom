<?xml version='1.0' encoding='UTF-8'?>
<?xml-stylesheet href="https://j19sch.github.io/assets/xml/atom.xsl" type="text/xsl media="all"?>
<feed xml:lang="en" xmlns="http://www.w3.org/2005/Atom">
  <title>Joep Schuurkes</title>
  <id>https://j19sch.github.io/blog/feed.atom</id>
  <updated>2022-05-05T08:44:16Z</updated>
  <author>
    <name>Joep Schuurkes</name>
  </author>
  <link rel="self" type="application/atom+xml" href="https://j19sch.github.io/blog/feed.atom"/>
  <link rel="alternate" type="text/html" href="https://j19sch.github.io/blog/"/>
  <generator uri="https://getnikola.com/">Nikola</generator>
  <entry>
    <title>(clj 8) Some notes on lazy sequences and function parameters</title>
    <id>https://j19sch.github.io/blog/clojure/2022/clj-8-some-notes-on-lazy-sequences-and-function-parameters/</id>
    <updated>2022-04-18T14:16:36+02:00</updated>
    <published>2022-04-18T14:16:36+02:00</published>
    <author>
      <name>Joep Schuurkes</name>
    </author>
    <link rel="alternate" type="text/html" href="https://j19sch.github.io/blog/clojure/2022/clj-8-some-notes-on-lazy-sequences-and-function-parameters/"/>
    <summary type="html">&lt;div&gt;&lt;p&gt;Almost done with the chapter 4 &lt;em&gt;"Core Functions in Depth"&lt;/em&gt; of "&lt;a href="https://www.braveclojure.com/clojure-for-the-brave-and-true/"&gt;Clojure for the Brave and True&lt;/a&gt;"! Before wrapping up the chapter with a longer example, a summary, and some exercises, the book goes into lazy sequences, the collection abstraction, and function functions. In this post I will share some notes on infinite lazy sequences and function parameters, making comparisons between Clojure and Python.&lt;/p&gt;
&lt;h2&gt;Infinite lazy sequences&lt;/h2&gt;
&lt;p&gt;A lazy sequence is a sequence whose members aren't computed until you try to access them. One advantage is that it's more efficient: the whole sequence doesn't have to be calculated and kept in memory from the start. Another advantage is that it allows you to create infinite sequences. Do that with a normal sequence and your program would never want to stop calculating.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://j19sch.github.io/blog/clojure/2022/clj-8-some-notes-on-lazy-sequences-and-function-parameters/"&gt;Read more…&lt;/a&gt; (4 min remaining to read)&lt;/p&gt;&lt;/div&gt;</summary>
    <category term="brave-clojure" label="brave clojure"/>
    <category term="clojure" label="clojure"/>
    <category term="programming" label="programming"/>
  </entry>
  <entry>
    <title>Structuring group discussions with K-cards</title>
    <id>https://j19sch.github.io/blog/2022/structuring-group-discussions-with-k-cards/</id>
    <updated>2022-03-25T18:27:30+01:00</updated>
    <published>2022-03-25T18:27:30+01:00</published>
    <author>
      <name>Joep Schuurkes</name>
    </author>
    <link rel="alternate" type="text/html" href="https://j19sch.github.io/blog/2022/structuring-group-discussions-with-k-cards/"/>
    <summary type="html">&lt;figure&gt;&lt;img src="https://j19sch.github.io/images/2022/k-cards/k-cards.jpeg"&gt;&lt;/figure&gt; &lt;div&gt;&lt;p&gt;K-cards are often used at peer conferences to facilitate the discussion after someone has presented their experience report. Some people really hate them. In my experience they're a great tool to enable rich conversations. Since the facilitator uses the K-cards to structure the discussion in threads, K-cards allow the group to drill down to the details of the experience report. This instead of the conversation jumping around as person 1 broaches topic A, person 2 introduces topic B, and person 3 wants to return to topic A.&lt;/p&gt;
&lt;p&gt;The explanation of these K-cards often takes the form of &lt;em&gt;"This is what each card means."&lt;/em&gt; instead of &lt;em&gt;"This is when to use this card for what purpose."&lt;/em&gt; And despite the elegance of the K-cards system, when you learn about them during the opening of a peer conference, it's a lot of information to digest. So I hope this blog post will be useful as a written explanation of how to use K-cards.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://j19sch.github.io/blog/2022/structuring-group-discussions-with-k-cards/"&gt;Read more…&lt;/a&gt; (8 min remaining to read)&lt;/p&gt;&lt;/div&gt;</summary>
    <category term="facilitation" label="facilitation"/>
    <category term="peer-conference" label="peer conference"/>
  </entry>
  <entry>
    <title>Uncovering Agile micro-skills at FroGS conf</title>
    <id>https://j19sch.github.io/blog/2022/uncovering-agile-micro-skills-at-frogsconf/</id>
    <updated>2022-03-14T16:56:09+01:00</updated>
    <published>2022-03-14T16:56:09+01:00</published>
    <author>
      <name>Joep Schuurkes</name>
    </author>
    <link rel="alternate" type="text/html" href="https://j19sch.github.io/blog/2022/uncovering-agile-micro-skills-at-frogsconf/"/>
    <summary type="html">&lt;div&gt;&lt;p&gt;At the second &lt;a href="https://frogsconf.nl/"&gt;FroGS conf Open Space&lt;/a&gt; on 12 March 2022 I facilitated a session based on my blog post &lt;a href="https://j19sch.github.io/blog/2022/four-skills-to-embody-the-four-agile-values/"&gt;&lt;em&gt;"Four skills to embody the four Agile values"&lt;/em&gt;&lt;/a&gt;. My goal with the session was to uncover more Agile (micro-)skills. In this post I'll share what we did during the session and I'll close off with some thoughts on the biggest challenge of this exercise: too many skills. Before I start however, a big thank you to everyone who participated in the session!&lt;/p&gt;
&lt;h2&gt;What we value&lt;/h2&gt;
&lt;p&gt;I opened the session with asking people to add stickies to the board of things they valued in Agile software development. When was I preparing the Miro board before the session, I labeled this part of the board "values". Then I remembered I had decided earlier to label it "what we value", so as to avoid the discussion about what values are and aren't. The topic did come up (i.e. the relation between values, ethics and morals), so I was glad I could respond by saying it's a great topic, but not for this session.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://j19sch.github.io/blog/2022/uncovering-agile-micro-skills-at-frogsconf/"&gt;Read more…&lt;/a&gt; (4 min remaining to read)&lt;/p&gt;&lt;/div&gt;</summary>
    <category term="agile" label="agile"/>
    <category term="conference" label="conference"/>
    <category term="skills" label="skills"/>
    <category term="values" label="values"/>
  </entry>
  <entry>
    <title>Four skills to embody the four Agile values</title>
    <id>https://j19sch.github.io/blog/2022/four-skills-to-embody-the-four-agile-values/</id>
    <updated>2022-02-06T17:04:06+01:00</updated>
    <published>2022-02-06T17:04:06+01:00</published>
    <author>
      <name>Joep Schuurkes</name>
    </author>
    <link rel="alternate" type="text/html" href="https://j19sch.github.io/blog/2022/four-skills-to-embody-the-four-agile-values/"/>
    <summary type="html">&lt;div&gt;&lt;p&gt;If you're familiar with the &lt;a href="https://agilemanifesto.org/"&gt;Agile Manifesto&lt;/a&gt;, you're familiar with its four values:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Individuals and interactions over processes and tools&lt;/li&gt;
&lt;li&gt;Working software over comprehensive documentation&lt;/li&gt;
&lt;li&gt;Customer collaboration over contract negotiation&lt;/li&gt;
&lt;li&gt;Responding to change over following a plan&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Recently this made me wonder: how do you apply these values? How do you live them? What skills do you need to embody them? In this post I won't be sharing any definitive or complete answers, but as a starting point I have identified four skills needed to embody the four Agile values.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://j19sch.github.io/blog/2022/four-skills-to-embody-the-four-agile-values/"&gt;Read more…&lt;/a&gt; (9 min remaining to read)&lt;/p&gt;&lt;/div&gt;</summary>
    <category term="agile" label="agile"/>
    <category term="skills" label="skills"/>
    <category term="values" label="values"/>
  </entry>
  <entry>
    <title>From tension to agreement with Sociocracy 3.0</title>
    <id>https://j19sch.github.io/blog/2022/from-tension-to-agreement-with-sociocracy-30/</id>
    <updated>2022-01-22T11:27:13+01:00</updated>
    <published>2022-01-22T11:27:13+01:00</published>
    <author>
      <name>Joep Schuurkes</name>
    </author>
    <link rel="alternate" type="text/html" href="https://j19sch.github.io/blog/2022/from-tension-to-agreement-with-sociocracy-30/"/>
    <summary type="html">&lt;div&gt;&lt;p&gt;Earlier this month I started my new job at a small consultancy. During my onboarding I noticed something that I thought could be improved. So I figured I should come up with a proposal to address that. It also made me wonder how me proposing this improvement would go over with my new colleagues. And then I remembered I learned about a good way of doing this in a workshop&lt;sup id="fnref:6"&gt;&lt;a class="footnote-ref" href="https://j19sch.github.io/blog/2022/from-tension-to-agreement-with-sociocracy-30/#fn:6"&gt;1&lt;/a&gt;&lt;/sup&gt; at the 2016 &lt;a href="https://xpdaysbenelux.nl/"&gt;XP Days Benelux&lt;/a&gt; conference. That workshop was about &lt;a href="https://sociocracy30.org/"&gt;Sociocracy 3.0&lt;/a&gt; (S3 for short). So I ended up proposing two things in the meeting: my improvement, but also a way to come to an agreement about my proposal.&lt;/p&gt;
&lt;p&gt;The reactions to my proposal about how to come to agreements, were mostly positive. One person asked a very good question though: &lt;em&gt;"Is this solving a problem we are having? Or is this a solution looking for a problem? What would be the reasons for adopting this?"&lt;/em&gt; In response I expanded on my reasons for wanting this and we decided to give it a try. My dual proposal helped here: let's try the S3 patterns I shared on the improvement I proposed.&lt;/p&gt;
&lt;p&gt;Looking back, I'm happy with my reply to those questions and I also feel I can do better. Which makes this the perfect opportunity for my first blog post of 2022. I'll start with a brief introduction on Sociocracy 3.0, then I'll share the proposal I made based on S3, and finally I'll talk about why I like this form of decision-making.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://j19sch.github.io/blog/2022/from-tension-to-agreement-with-sociocracy-30/"&gt;Read more…&lt;/a&gt; (7 min remaining to read)&lt;/p&gt;&lt;/div&gt;</summary>
    <category term="leadership" label="leadership"/>
    <category term="self-organization" label="self-organization"/>
    <category term="sociocracy-30" label="sociocracy 3.0"/>
  </entry>
  <entry>
    <title>Site analytics: if you have two watches...</title>
    <id>https://j19sch.github.io/blog/2021/site-analytics-if-you-have-two-watches/</id>
    <updated>2021-12-28T11:08:16+01:00</updated>
    <published>2021-12-28T11:08:16+01:00</published>
    <author>
      <name>Joep Schuurkes</name>
    </author>
    <link rel="alternate" type="text/html" href="https://j19sch.github.io/blog/2021/site-analytics-if-you-have-two-watches/"/>
    <summary type="html">&lt;div&gt;&lt;p&gt;When I moved my blog to this site, I added &lt;a href="https://clicky.com/"&gt;Clicky&lt;/a&gt; as a privacy-friendly way to collect analytics. About a month ago I added &lt;a href="https://plausible.io/"&gt;Plausible&lt;/a&gt; analytics, because I wanted to compare the two.&lt;/p&gt;
&lt;p&gt;My reasons to consider an alternative to Clicky, and Plausible in particular, were varied. Plausible looks nicer. Clicky's free plan only lets you track one site, I want analytics for this site and for my &lt;a href="https://context-of-agile.org/"&gt;Context of Agile&lt;/a&gt; site. I'd like to have more than 30 days of history for my data. Those last two wishes require a paid plan (regardless if Clicky or Plausible) and Plausible is cheaper than Clicky.&lt;/p&gt;
&lt;p&gt;So I got a 30-day trial with Plausible, added its script to my site, while Clicky also kept collecting data. With the trial now over, it's time to take a look at the data they both collected over the period from 28 November to 27 December 2021. I've added some thoughts after each table with data and at the end of this post I've added some more general thoughts.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://j19sch.github.io/blog/2021/site-analytics-if-you-have-two-watches/"&gt;Read more…&lt;/a&gt; (6 min remaining to read)&lt;/p&gt;&lt;/div&gt;</summary>
    <category term="site" label="site"/>
  </entry>
  <entry>
    <title>(clj 7) Programming to abstractions with sequence functions</title>
    <id>https://j19sch.github.io/blog/clojure/2021/clj7-programming-to-abstractions-with-sequence-functions/</id>
    <updated>2021-12-05T13:40:36+01:00</updated>
    <published>2021-12-05T13:40:36+01:00</published>
    <author>
      <name>Joep Schuurkes</name>
    </author>
    <link rel="alternate" type="text/html" href="https://j19sch.github.io/blog/clojure/2021/clj7-programming-to-abstractions-with-sequence-functions/"/>
    <summary type="html">&lt;div&gt;&lt;p&gt;Looking at my progress so far, I realized it's time re-evaluate this whole learning Clojure-thing. After looking through the table of contents of "&lt;a href="https://www.braveclojure.com/"&gt;Clojure for the Brave and True&lt;/a&gt;" and giving it some thought, I decided to make two changes to how I'll proceed:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;I will start writing shorter posts and write them more often.&lt;/li&gt;
&lt;li&gt;My goal is to finish &lt;em&gt;"Part II: Language Fundamentals"&lt;/em&gt;. I don't have to do &lt;em&gt;"Part III: Advanced Topics"&lt;/em&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Completing Part II will still take quite some work. I've worked through the two first sections of chapter 4 (5 sections left in that chapter) and Part II goes up to chapter 8. So no time to waste: let's take a look at sequence functions and programming to abstractions.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://j19sch.github.io/blog/clojure/2021/clj7-programming-to-abstractions-with-sequence-functions/"&gt;Read more…&lt;/a&gt; (7 min remaining to read)&lt;/p&gt;&lt;/div&gt;</summary>
    <category term="brave-clojure" label="brave clojure"/>
    <category term="clojure" label="clojure"/>
    <category term="programming" label="programming"/>
  </entry>
  <entry>
    <title>How to run a remote Elephant Carpaccio</title>
    <id>https://j19sch.github.io/blog/2021/how-to-run-a-remote-elephant-carpaccio/</id>
    <updated>2021-11-28T13:35:16+01:00</updated>
    <published>2021-11-28T13:35:16+01:00</published>
    <author>
      <name>Joep Schuurkes</name>
    </author>
    <link rel="alternate" type="text/html" href="https://j19sch.github.io/blog/2021/how-to-run-a-remote-elephant-carpaccio/"/>
    <summary type="html">&lt;div&gt;&lt;p&gt;In a &lt;a href="https://j19sch.github.io/blog/2021/two-times-remote-elephant-carpaccio/"&gt;previous post&lt;/a&gt; I promised to write a blog post on how I would run remote &lt;a href="https://web.archive.org/web/20171114154855/http://alistair.cockburn.us/Elephant+Carpaccio+exercise"&gt;Elephant Carpaccio&lt;/a&gt; if I get the opportunity to run it a third time. This is that post, but not exactly. In the mean time I got the opportunity to run the workshop one more time. That gave me the opportunity to try out some new things and write this blog post on how to run a remote Elephant Carpaccio.&lt;/p&gt;
&lt;p&gt;I should be clear on one thing, though. This post is not a full facilitation guide. It can't be with the limited experience I have. I do hope and think that reading the official(?) &lt;a href="https://docs.google.com/document/d/1TCuuu-8Mm14oxsOnlk8DqfZAA1cvtYu9WGv67Yj_sSk/pub"&gt;facilitation guide&lt;/a&gt; and this blog post, gives you a solid base to start running the Elephant Carpaccio exercise remotely yourself.&lt;/p&gt;
&lt;h3&gt;The preparation&lt;/h3&gt;
&lt;p&gt;Take your time to prep. Taking &lt;a href="https://j19sch.github.io/blog/2021/lessons-learned-after-facilitating-elephant-carpaccio/#take-your-time-for-the-before-and-after"&gt;as much time as the duration&lt;/a&gt; of the workshop is a good start. (That's assuming you are already familiar with the Elephant Carpaccio exercise, though. So if you're not, do that first.) Get a clear picture in your head what you want to achieve with the workshop. Run through it in your mind in detail. Decide which options you have in which parts of the workshop to make changes as the workshop happens.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://j19sch.github.io/blog/2021/how-to-run-a-remote-elephant-carpaccio/"&gt;Read more…&lt;/a&gt; (8 min remaining to read)&lt;/p&gt;&lt;/div&gt;</summary>
    <category term="agile" label="agile"/>
    <category term="elephant-carpaccio" label="elephant carpaccio"/>
    <category term="facilitation" label="facilitation"/>
    <category term="slices" label="slices"/>
    <category term="workshop" label="workshop"/>
  </entry>
  <entry>
    <title>Lessons learned after facilitating remote Elephant Carpaccio</title>
    <id>https://j19sch.github.io/blog/2021/lessons-learned-after-facilitating-elephant-carpaccio/</id>
    <updated>2021-10-24T17:36:50+02:00</updated>
    <published>2021-10-24T17:36:50+02:00</published>
    <author>
      <name>Joep Schuurkes</name>
    </author>
    <link rel="alternate" type="text/html" href="https://j19sch.github.io/blog/2021/lessons-learned-after-facilitating-elephant-carpaccio/"/>
    <summary type="html">&lt;div&gt;&lt;p&gt;In my &lt;a href="https://j19sch.github.io/blog/2021/two-times-remote-elephant-carpaccio/"&gt;previous blog post&lt;/a&gt; I shared my experience of facilitating remote Elephant Carpaccio  twice. In this second post I want to share some things I learned through that experience that apply to facilitating remote experiential workshops in general.&lt;/p&gt;
&lt;h3&gt;The facilitation guide&lt;/h3&gt;
&lt;p&gt;The Elephant Carpaccio exercise has a detailed &lt;a href="https://docs.google.com/document/d/1TCuuu-8Mm14oxsOnlk8DqfZAA1cvtYu9WGv67Yj_sSk/pub"&gt;facilitation guide&lt;/a&gt;, created by &lt;a href="https://twitter.com/henrikkniberg"&gt;Henrik Kniberg&lt;/a&gt; and &lt;a href="https://twitter.com/totheralistair"&gt;Alistair Cockburn&lt;/a&gt; (also inventor of the exercise). This guide really is a blessing and a curse. It's great to have guidance on how to run the exercise. However, there's also only so much such a guide can do. As I was writing the blog post of me running the exercise twice, I looked at the facilitation guide again, and it made so much more sense to me. Instead of it being instructions about something new, I could connect the contents to my own experiences. And that experience does make me wonder how advisable it is to facilitate an exercise you have never done or seen based on a luckily excellent and very detailed faciliation guide.&lt;/p&gt;
&lt;p&gt;The level of detail in the facilitation guide also had me walk into the trap of relying on it too much. Instead of taking my own context fully into account, I though I could follow the guide with a few tweaks. As you could read in my &lt;a href="https://j19sch.github.io/blog/2021/two-times-remote-elephant-carpaccio/"&gt;previous post&lt;/a&gt;, the first time I ran the exercise, it got away from me a little. In this sense I find it interesting that Oliver Spann seems to have had &lt;a href="https://medium.com/@olivercecilspann/elephant-carpaccio-exercise-an-experience-report-207f0cc79c34"&gt;a similar experience&lt;/a&gt; facilitating Elephant Carpaccio for the first time:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://j19sch.github.io/blog/2021/lessons-learned-after-facilitating-elephant-carpaccio/"&gt;Read more…&lt;/a&gt; (3 min remaining to read)&lt;/p&gt;&lt;/div&gt;</summary>
    <category term="elephant-carpaccio" label="elephant carpaccio"/>
    <category term="facilitation" label="facilitation"/>
    <category term="workshop" label="workshop"/>
  </entry>
  <entry>
    <title>Two times remote Elephant Carpaccio</title>
    <id>https://j19sch.github.io/blog/2021/two-times-remote-elephant-carpaccio/</id>
    <updated>2021-10-03T21:28:50+02:00</updated>
    <published>2021-10-03T21:28:50+02:00</published>
    <author>
      <name>Joep Schuurkes</name>
    </author>
    <link rel="alternate" type="text/html" href="https://j19sch.github.io/blog/2021/two-times-remote-elephant-carpaccio/"/>
    <summary type="html">&lt;div&gt;&lt;p&gt;A while ago I asked the teams in my department which parts of agile software development they wanted to learn more about. One of the topics that stood out, was: you have a high-level description of a new feature, then what? That's still quite a wide topic, so the question become on what part of that problem would I focus first.&lt;/p&gt;
&lt;p&gt;Quite quickly I settled on feature slicing - for several reasons. First of all, I had noticed teams delivering somewhat big chunks of functionality, split up into development tasks instead of vertical slices. Secondly, a team I had worked with on feature slicing, had gained some valuable planning flexibility because of it. And they continued the practice, breaking up projects vertically. Finally, I was aware that there was a workshop called "Elephant Carpaccio", focused on feature slicing. So I could use that, or build on it, but at least I wouldn't have to come up with something from scratch.&lt;/p&gt;
&lt;h3&gt;The Elephant Carpaccio exercise&lt;/h3&gt;
&lt;p&gt;The Elephant Carpaccio exercise was invented by Alistair Cockburn&lt;sup id="fnref:1"&gt;&lt;a class="footnote-ref" href="https://j19sch.github.io/blog/2021/two-times-remote-elephant-carpaccio/#fn:1"&gt;1&lt;/a&gt;&lt;/sup&gt;. Its purpose is to get people to practice &lt;em&gt;"nano-incremental"&lt;/em&gt; development, i.e. slicing something small enough you can program it in 15-30 minutes. The exercise tries to bring home its point through exageration: you are asked to slice a very simple application in 15-20 slices, where you would normally do it in 2-3 slices. Then you get five iterations of 8 minutes to build those slices. To me that's the coolest part of the exercise: you actually get to experience what's it like to work with such small slices. As Alistair Cockburn himself says about the exercise: &lt;em&gt;"the true learning is the actual programming section"&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://j19sch.github.io/blog/2021/two-times-remote-elephant-carpaccio/"&gt;Read more…&lt;/a&gt; (5 min remaining to read)&lt;/p&gt;&lt;/div&gt;</summary>
    <category term="agile" label="agile"/>
    <category term="elephant-carpaccio" label="elephant carpaccio"/>
    <category term="facilitation" label="facilitation"/>
    <category term="slices" label="slices"/>
    <category term="workshop" label="workshop"/>
  </entry>
</feed>

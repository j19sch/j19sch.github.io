<?xml version='1.0' encoding='UTF-8'?>
<?xml-stylesheet href="https://smallsheds.garden/assets/xml/atom.xsl" type="text/xsl media="all"?>
<feed xml:lang="en" xmlns="http://www.w3.org/2005/Atom">
  <title>Joep Schuurkes (Posts about small steps)</title>
  <id>https://smallsheds.garden/categories/small-steps.atom</id>
  <updated>2025-01-19T15:32:51Z</updated>
  <author>
    <name>Joep Schuurkes</name>
  </author>
  <link rel="self" type="application/atom+xml" href="https://smallsheds.garden/categories/small-steps.atom"/>
  <link rel="alternate" type="text/html" href="https://smallsheds.garden/categories/small-steps/"/>
  <generator uri="https://getnikola.com/">Nikola</generator>
  <entry>
    <title>Using "fake it till you make it" to implement counterstring</title>
    <id>https://smallsheds.garden/blog/2025/using-fake-it-till-you-make-it-to-implement-counterstring/</id>
    <updated>2025-01-05T00:00:00+01:00</updated>
    <published>2025-01-05T00:00:00+01:00</published>
    <author>
      <name>Joep Schuurkes</name>
    </author>
    <link rel="alternate" type="text/html" href="https://smallsheds.garden/blog/2025/using-fake-it-till-you-make-it-to-implement-counterstring/"/>
    <summary type="html">&lt;div&gt;&lt;p&gt;Last week I implemented &lt;a href="https://www.satisfice.com/download/perlclip"&gt;PerlClip&lt;/a&gt;'s &lt;a href="https://www.satisfice.com/blog/archives/22"&gt;counterstring&lt;/a&gt; in TypeScript. A counterstring is a string that tells you how long it is. For example a counterstring with length 9 looks like this: &lt;code&gt;*3*5*7*9*&lt;/code&gt;. Each number tells you the position of the asterisk following the number. My main goal with this project is to learn more about front-end development.&lt;/p&gt;
&lt;p&gt;Before I could start doing any front-end stuff, however, I needed to write a function that correctly generates counterstrings. Since I approached it in a way that I really enjoyed, inspired by Llewellyn Falco &lt;a href="https://youtu.be/O1h9ho2G85Q?t=155"&gt;"Fake it till you make it"&lt;/a&gt;, I figured it would make a good first post about this project.&lt;/p&gt;
&lt;p&gt;The idea behind "fake it till you make it" is simple. Start with an implementation covering a single case ("fake it") and then pull it apart little-by-little until it becomes an actual program ("make it"). As Llewellyn explains in the video, the value of this technique is that it's a lot easier to start from a working example and proceed from there than it is to get complete requirements.&lt;/p&gt;
&lt;p&gt;I did approach counterstring from the opposite direction, though, as Llewellyn did with Fizzbuzz in the video. Llewellyn starts with FizzBuzz length 20, so a case covering all the logic. Then he refactors it using different techniques, such as separation and encapsulation. While I started with counterstring length 0, the most simple case, and then worked my way up to larger lengths.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://smallsheds.garden/blog/2025/using-fake-it-till-you-make-it-to-implement-counterstring/"&gt;Read more…&lt;/a&gt; (4 min remaining to read)&lt;/p&gt;&lt;/div&gt;</summary>
    <category term="counterstring" label="counterstring"/>
    <category term="programming" label="programming"/>
    <category term="small-steps" label="small steps"/>
  </entry>
  <entry>
    <title>Three lessons after three months of quality engineering</title>
    <id>https://smallsheds.garden/blog/2022/three-lessons-after-three-months-of-quality-engineering/</id>
    <updated>2022-11-27T16:41:25+01:00</updated>
    <published>2022-11-27T16:41:25+01:00</published>
    <author>
      <name>Joep Schuurkes</name>
    </author>
    <link rel="alternate" type="text/html" href="https://smallsheds.garden/blog/2022/three-lessons-after-three-months-of-quality-engineering/"/>
    <summary type="html">&lt;div&gt;&lt;p&gt;Three months ago I started a new job as a quality engineer, supporting two teams. So far it's been an interesting challenge. The two teams were formed only a few months before I joined, although some team members had been working for the company before that. Each team has their own product manager. We also have an engineering manager, but he joined only two weeks before I did. And then I was added to the mix, with a job description that didn't give a lot more guidance than: support the team in things related to testing and quality.&lt;/p&gt;
&lt;p&gt;So my first task in my new job was figuring out what my job was. Or rather, figure out what concrete things I could do that fit that job description. This was not made easier by the fact that we're a fully remote company. Not being in the same space throughout the day does make things harder when you're trying to find your place. Reflecting on the past three months made me realize there are three things that are really important: visibility, connections, and patience.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://smallsheds.garden/blog/2022/three-lessons-after-three-months-of-quality-engineering/"&gt;Read more…&lt;/a&gt; (5 min remaining to read)&lt;/p&gt;&lt;/div&gt;</summary>
    <category term="quality-engineering" label="quality engineering"/>
    <category term="skills" label="skills"/>
    <category term="small-steps" label="small steps"/>
  </entry>
  <entry>
    <title>How to run a remote Elephant Carpaccio</title>
    <id>https://smallsheds.garden/blog/2021/how-to-run-a-remote-elephant-carpaccio/</id>
    <updated>2021-11-28T13:35:16+01:00</updated>
    <published>2021-11-28T13:35:16+01:00</published>
    <author>
      <name>Joep Schuurkes</name>
    </author>
    <link rel="alternate" type="text/html" href="https://smallsheds.garden/blog/2021/how-to-run-a-remote-elephant-carpaccio/"/>
    <summary type="html">&lt;div&gt;&lt;p&gt;In a &lt;a href="https://smallsheds.garden/blog/2021/two-times-remote-elephant-carpaccio/"&gt;previous post&lt;/a&gt; I promised to write a blog post on how I would run remote &lt;a href="https://web.archive.org/web/20171114154855/http://alistair.cockburn.us/Elephant+Carpaccio+exercise"&gt;Elephant Carpaccio&lt;/a&gt; if I get the opportunity to run it a third time. This is that post, but not exactly. In the mean time I got the opportunity to run the workshop one more time. That gave me the opportunity to try out some new things and write this blog post on how to run a remote Elephant Carpaccio.&lt;/p&gt;
&lt;p&gt;I should be clear on one thing, though. This post is not a full facilitation guide. It can't be with the limited experience I have. I do hope and think that reading the official(?) &lt;a href="https://docs.google.com/document/d/1TCuuu-8Mm14oxsOnlk8DqfZAA1cvtYu9WGv67Yj_sSk/pub"&gt;facilitation guide&lt;/a&gt; and this blog post, gives you a solid base to start running the Elephant Carpaccio exercise remotely yourself.&lt;/p&gt;
&lt;h3&gt;The preparation&lt;/h3&gt;
&lt;p&gt;Take your time to prep. Taking &lt;a href="https://smallsheds.garden/blog/2021/lessons-learned-after-facilitating-elephant-carpaccio/#take-your-time-for-the-before-and-after"&gt;as much time as the duration&lt;/a&gt; of the workshop is a good start. (That's assuming you are already familiar with the Elephant Carpaccio exercise, though. So if you're not, do that first.) Get a clear picture in your head what you want to achieve with the workshop. Run through it in your mind in detail. Decide which options you have in which parts of the workshop to make changes as the workshop happens.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://smallsheds.garden/blog/2021/how-to-run-a-remote-elephant-carpaccio/"&gt;Read more…&lt;/a&gt; (8 min remaining to read)&lt;/p&gt;&lt;/div&gt;</summary>
    <category term="agile" label="agile"/>
    <category term="elephant-carpaccio" label="elephant carpaccio"/>
    <category term="facilitation" label="facilitation"/>
    <category term="small-steps" label="small steps"/>
    <category term="workshop" label="workshop"/>
  </entry>
  <entry>
    <title>Two times remote Elephant Carpaccio</title>
    <id>https://smallsheds.garden/blog/2021/two-times-remote-elephant-carpaccio/</id>
    <updated>2021-10-03T21:28:50+02:00</updated>
    <published>2021-10-03T21:28:50+02:00</published>
    <author>
      <name>Joep Schuurkes</name>
    </author>
    <link rel="alternate" type="text/html" href="https://smallsheds.garden/blog/2021/two-times-remote-elephant-carpaccio/"/>
    <summary type="html">&lt;div&gt;&lt;p&gt;A while ago I asked the teams in my department which parts of agile software development they wanted to learn more about. One of the topics that stood out, was: you have a high-level description of a new feature, then what? That's still quite a wide topic, so the question become on what part of that problem would I focus first.&lt;/p&gt;
&lt;p&gt;Quite quickly I settled on feature slicing - for several reasons. First of all, I had noticed teams delivering somewhat big chunks of functionality, split up into development tasks instead of vertical slices. Secondly, a team I had worked with on feature slicing, had gained some valuable planning flexibility because of it. And they continued the practice, breaking up projects vertically. Finally, I was aware that there was a workshop called "Elephant Carpaccio", focused on feature slicing. So I could use that, or build on it, but at least I wouldn't have to come up with something from scratch.&lt;/p&gt;
&lt;h3&gt;The Elephant Carpaccio exercise&lt;/h3&gt;
&lt;p&gt;The Elephant Carpaccio exercise was invented by Alistair Cockburn&lt;sup id="fnref:1"&gt;&lt;a class="footnote-ref" href="https://smallsheds.garden/blog/2021/two-times-remote-elephant-carpaccio/#fn:1"&gt;1&lt;/a&gt;&lt;/sup&gt;. Its purpose is to get people to practice &lt;em&gt;"nano-incremental"&lt;/em&gt; development, i.e. slicing something small enough you can program it in 15-30 minutes. The exercise tries to bring home its point through exageration: you are asked to slice a very simple application in 15-20 slices, where you would normally do it in 2-3 slices. Then you get five iterations of 8 minutes to build those slices. To me that's the coolest part of the exercise: you actually get to experience what's it like to work with such small slices. As Alistair Cockburn himself says about the exercise: &lt;em&gt;"the true learning is the actual programming section"&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://smallsheds.garden/blog/2021/two-times-remote-elephant-carpaccio/"&gt;Read more…&lt;/a&gt; (5 min remaining to read)&lt;/p&gt;&lt;/div&gt;</summary>
    <category term="agile" label="agile"/>
    <category term="elephant-carpaccio" label="elephant carpaccio"/>
    <category term="facilitation" label="facilitation"/>
    <category term="small-steps" label="small steps"/>
    <category term="workshop" label="workshop"/>
  </entry>
  <entry>
    <title>Thinking about quality: so what to do?</title>
    <id>https://smallsheds.garden/blog/2021/thinking-about-quality-so-what-to-do/</id>
    <updated>2021-04-07T13:25:02+02:00</updated>
    <published>2021-04-07T13:25:02+02:00</published>
    <author>
      <name>Joep Schuurkes</name>
    </author>
    <link rel="alternate" type="text/html" href="https://smallsheds.garden/blog/2021/thinking-about-quality-so-what-to-do/"/>
    <summary type="html">&lt;div&gt;&lt;p&gt;On 30 January 2021 I participated in the Quality Acceleration Peer Conference organized by Huib Schoots and Joost Voskuil. Participants were &lt;a href="https://twitter.com/alanpage"&gt;Alan Page&lt;/a&gt;, &lt;a href="https://twitter.com/unremarkableQA"&gt;Areti Panou&lt;/a&gt;, &lt;a href="https://twitter.com/northern_tester"&gt;Ash Winter&lt;/a&gt;, &lt;a href="https://twitter.com/btknaack"&gt;Bart Knaack&lt;/a&gt;, &lt;a href="https://twitter.com/conorfi"&gt;Conor Fitzgerald&lt;/a&gt;, &lt;a href="https://twitter.com/roukedejong"&gt;Rouke de Jong&lt;/a&gt;, &lt;a href="https://twitter.com/gwendiagram"&gt;Gwen Diagram&lt;/a&gt;, &lt;a href="https://twitter.com/gdinwiddie"&gt;George Dinwiddie&lt;/a&gt;, &lt;a href="https://twitter.com/janetgregoryca"&gt;Janet Gregory&lt;/a&gt;, &lt;a href="https://twitter.com/joost_voskuil"&gt;Joost Voskuil&lt;/a&gt;, &lt;a href="https://twitter.com/jpjwolli"&gt;Joost van Wollingen&lt;/a&gt;, &lt;a href="https://twitter.com/mmeijeri"&gt;Martijn Meijering&lt;/a&gt;, &lt;a href="https://twitter.com/robmeaney"&gt;Rob Meaney&lt;/a&gt;, &lt;a href="https://twitter.com/vinwijnl"&gt;Vincent Wijnen&lt;/a&gt; - with &lt;a href="https://twitter.com/huibschoots"&gt;Huib Schoots&lt;/a&gt; facilitating the peer conference. The main topics mentioned in the invite were: "How can you sell quality?", "How can you convince people that quality can accelerate software delivery?", and "What limitations or barriers do you hit?"&lt;/p&gt;
&lt;p&gt;Reflecting during and after our discussions on these topics, I realized there are some interesting things going on about how we talk about quality and how to sell it. Enough interesting things to fill more than one blog post, so this will be a four-part series. And I might expand on some ideas in the series after that.&lt;/p&gt;
&lt;p&gt;The first three parts covered rather philosophical topics: &lt;a href="https://smallsheds.garden/blog/2021/choosing-your-value-system/"&gt;choosing your value system&lt;/a&gt;, &lt;a href="https://smallsheds.garden/blog/2021/who-doesnt-want-quality/"&gt;exploring what it means to sell quality&lt;/a&gt;, and &lt;a href="https://smallsheds.garden/blog/2021/management-paradigms-and-quality/"&gt;how management paradigms affect quality&lt;/a&gt;. At the end of the third post I brought up the main question for this fourth and last post: so now what? If you expect me to get very concrete and specific in this post, I'm afraid I have to disappoint you. What I will do, is share a way to think about actions that has been helpful to me.&lt;/p&gt;
&lt;h3&gt;Quality is something emergent&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://twitter.com/charrett"&gt;Anne-Marie Charrett&lt;/a&gt; says in a blog post titled "&lt;a href="https://mavericktester.com/2018/12/04/emergent-quality/"&gt;Emergent Quality&lt;/a&gt;":&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;"My hypothesis is that quality is an emergent behaviour. It relies on a whole set of independent systems coming together to create this emergent property. We can never truly know what quality is. It’s constantly changing and morphing into different things. For sure, we can provide examples, but know quality itself? I’m not convinced."&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href="https://smallsheds.garden/blog/2021/thinking-about-quality-so-what-to-do/"&gt;Read more…&lt;/a&gt; (8 min remaining to read)&lt;/p&gt;&lt;/div&gt;</summary>
    <category term="leadership" label="leadership"/>
    <category term="peer-conferences" label="peer conferences"/>
    <category term="quality" label="quality"/>
    <category term="quality-engineering" label="quality engineering"/>
    <category term="small-steps" label="small steps"/>
  </entry>
</feed>

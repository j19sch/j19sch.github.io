<?xml version='1.0' encoding='UTF-8'?>
<?xml-stylesheet href="https://smallsheds.garden/assets/xml/atom.xsl" type="text/xsl media="all"?>
<feed xml:lang="en" xmlns="http://www.w3.org/2005/Atom">
  <title>Joep Schuurkes (Posts about software testing)</title>
  <id>https://smallsheds.garden/categories/cat_software-testing.atom</id>
  <updated>2023-09-03T18:28:41Z</updated>
  <author>
    <name>Joep Schuurkes</name>
  </author>
  <link rel="self" type="application/atom+xml" href="https://smallsheds.garden/categories/cat_software-testing.atom"/>
  <link rel="alternate" type="text/html" href="https://smallsheds.garden/categories/cat_software-testing/"/>
  <generator uri="https://getnikola.com/">Nikola</generator>
  <entry>
    <title>My five favorite testing questions</title>
    <id>https://smallsheds.garden/blog/2023/my-five-favorite-testing-questions/</id>
    <updated>2023-05-03T08:57:25+02:00</updated>
    <published>2023-05-03T08:57:25+02:00</published>
    <author>
      <name>Joep Schuurkes</name>
    </author>
    <link rel="alternate" type="text/html" href="https://smallsheds.garden/blog/2023/my-five-favorite-testing-questions/"/>
    <summary type="html">&lt;div&gt;&lt;p&gt;Recently I realized there are a few testing questions I use a lot. They lie at the top of my testing toolbox, so to speak. Together they shape my testing style, making it easier for me to discover certain things, but probably also harder to find other kinds of things. So here are my five favorite testing questions, in no particular order.&lt;/p&gt;
&lt;h2&gt;What if there are zero, one, many, lots of this thing?&lt;/h2&gt;
&lt;p&gt;Last year I expressed my surprise &lt;a href="https://chaos.social/@joeposaurus/109427704814392787"&gt;on Mastodon&lt;/a&gt; how many times I've found bugs by asking the question: &lt;em&gt;"What if there are 0 / 1 / several / lots of this thing?"&lt;/em&gt; And if you're working closely enough to the code, you should also ask about "null".&lt;/p&gt;
&lt;p&gt;Quite a few people responded to my message. Turns out it's a &lt;a href="https://www.qwan.eu/2021/07/09/tdd-0-1-n.html"&gt;very&lt;/a&gt; &lt;a href="http://blog.wingman-sw.com/tdd-guided-by-zombies"&gt;common&lt;/a&gt; &lt;a href="https://mas.to/@zebulon/109428667658139893"&gt;pattern&lt;/a&gt; in TDD. And Brian Marick&lt;sup id="fnref:1"&gt;&lt;a class="footnote-ref" href="https://smallsheds.garden/blog/2023/my-five-favorite-testing-questions/#fn:1"&gt;1&lt;/a&gt;&lt;/sup&gt; remembered it &lt;a href="https://mstdn.social/@marick/109428042023981110"&gt;standing out&lt;/a&gt; when he was looking into fixed bugs in the Linux kernel they used in the '80s. Personally I learned it from Elisabeth Hendrickson's &lt;a href="https://web.archive.org/web/20150217124452/http://testobsessed.com/wp-content/uploads/2011/04/testheuristicscheatsheetv1.pdf"&gt;"Test Heuristics Cheat Sheet"&lt;/a&gt;, which found a &lt;a href="https://www.ministryoftesting.com/articles/ab1cd85c?s_id=14715206"&gt;new home&lt;/a&gt; last year at the Ministry of Testing.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://smallsheds.garden/blog/2023/my-five-favorite-testing-questions/"&gt;Read more…&lt;/a&gt; (6 min remaining to read)&lt;/p&gt;&lt;/div&gt;</summary>
    <category term="exploratory-testing" label="exploratory testing"/>
    <category term="heuristics" label="heuristics"/>
    <category term="software-testing" label="software testing"/>
  </entry>
  <entry>
    <title>"Tester" is an overloaded variable</title>
    <id>https://smallsheds.garden/blog/2022/tester-is-an-overloaded-variable/</id>
    <updated>2022-08-04T11:39:25+02:00</updated>
    <published>2022-08-04T11:39:25+02:00</published>
    <author>
      <name>Joep Schuurkes</name>
    </author>
    <link rel="alternate" type="text/html" href="https://smallsheds.garden/blog/2022/tester-is-an-overloaded-variable/"/>
    <summary type="html">&lt;div&gt;&lt;p&gt;Yesterday I came across a post on LinkedIn explaining why there are no testers in Scrum&lt;sup id="fnref:1"&gt;&lt;a class="footnote-ref" href="https://smallsheds.garden/blog/2022/tester-is-an-overloaded-variable/#fn:1"&gt;1&lt;/a&gt;&lt;/sup&gt;. What struck me most about the post was the amount of work the word "tester" was doing. In one sentence it meant one thing (a role in a team), in the next sentence something else (a step in the process), and so on. Hence the title of this post: the word "tester" was being used as an overloaded variable. So let's do some unpacking.&lt;/p&gt;
&lt;h2&gt;Testers to people management&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;"Having a tester"&lt;/em&gt; means that there are people with the official title of "tester" or "QA engineer" or whatever within the company. For the purposes of people management&lt;sup id="fnref:2"&gt;&lt;a class="footnote-ref" href="https://smallsheds.garden/blog/2022/tester-is-an-overloaded-variable/#fn:2"&gt;2&lt;/a&gt;&lt;/sup&gt;, there's a distinction between this role and the other roles in the company. This allows for more specific expectations about the role, for different career paths and salary scales, etc.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://smallsheds.garden/blog/2022/tester-is-an-overloaded-variable/"&gt;Read more…&lt;/a&gt; (4 min remaining to read)&lt;/p&gt;&lt;/div&gt;</summary>
    <category term="management" label="management"/>
    <category term="scrum" label="scrum"/>
    <category term="semantics" label="semantics"/>
    <category term="software-testing" label="software testing"/>
    <category term="test-management" label="test management"/>
  </entry>
</feed>

<?xml version='1.0' encoding='UTF-8'?>
<?xml-stylesheet href="https://smallsheds.garden/assets/xml/atom.xsl" type="text/xsl media="all"?>
<feed xml:lang="en" xmlns="http://www.w3.org/2005/Atom">
  <title>Joep Schuurkes (Posts about agile)</title>
  <id>https://smallsheds.garden/categories/agile.atom</id>
  <updated>2023-07-05T09:48:05Z</updated>
  <author>
    <name>Joep Schuurkes</name>
  </author>
  <link rel="self" type="application/atom+xml" href="https://smallsheds.garden/categories/agile.atom"/>
  <link rel="alternate" type="text/html" href="https://smallsheds.garden/categories/agile/"/>
  <generator uri="https://getnikola.com/">Nikola</generator>
  <entry>
    <title>I'm a quality engineer and I'm not sure how I feel about that</title>
    <id>https://smallsheds.garden/blog/2023/im-a-quality-engineer-and-im-not-sure-how-i-feel-about-that/</id>
    <updated>2023-07-05T11:42:34+02:00</updated>
    <published>2023-07-05T11:42:34+02:00</published>
    <author>
      <name>Joep Schuurkes</name>
    </author>
    <link rel="alternate" type="text/html" href="https://smallsheds.garden/blog/2023/im-a-quality-engineer-and-im-not-sure-how-i-feel-about-that/"/>
    <summary type="html">&lt;div&gt;&lt;p&gt;This post is a slightly edited version of the experience report I &lt;a class="reference external" href="https://smallsheds.garden/slides/xp2023-quality-engineer.html"&gt;presented&lt;/a&gt; at the &lt;a class="reference external" href="https://www.agilealliance.org/xp2023/"&gt;xp2023&lt;/a&gt; conference. It covers my first six months at a scale-up, working as a quality engineer for the first time - after having worked in other testing-related roles for 15+ years.&lt;/p&gt;
&lt;p&gt;My main finding is that for a quality engineering role to work well, certain structures need to be in place. The most important one is that the impact the quality engineer is expected to have, is clear to both the quality engineer and the team(s) they are supporting. However, regardless of which structures you put in place, a quality engineer will also need to work around those structures to be fully effective.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://smallsheds.garden/blog/2023/im-a-quality-engineer-and-im-not-sure-how-i-feel-about-that/"&gt;Read more…&lt;/a&gt; (22 min remaining to read)&lt;/p&gt;&lt;/div&gt;</summary>
    <category term="agile" label="agile"/>
    <category term="conferences" label="conferences"/>
    <category term="leadership" label="leadership"/>
    <category term="management" label="management"/>
    <category term="quality-engineering" label="quality engineering"/>
    <category term="software-testing" label="software testing"/>
  </entry>
  <entry>
    <title>A backlog item is a backlog item is a backlog item</title>
    <id>https://smallsheds.garden/blog/2023/a-backlog-item-is-a-backlog-item-is-a-backlog-item/</id>
    <updated>2023-04-03T08:51:25+02:00</updated>
    <published>2023-04-03T08:51:25+02:00</published>
    <author>
      <name>Joep Schuurkes</name>
    </author>
    <link rel="alternate" type="text/html" href="https://smallsheds.garden/blog/2023/a-backlog-item-is-a-backlog-item-is-a-backlog-item/"/>
    <summary type="html">&lt;div&gt;&lt;p&gt;Originally Scrum was very much about &lt;em&gt;"You tell us what needs building. We'll decide how we build it and how soon we'll deliver."&lt;/em&gt;&lt;sup id="fnref:1"&gt;&lt;a class="footnote-ref" href="https://smallsheds.garden/blog/2023/a-backlog-item-is-a-backlog-item-is-a-backlog-item/#fn:1"&gt;1&lt;/a&gt;&lt;/sup&gt; I've never seen that version of Scrum. The version I have seen, has a product manager try to get as many features into a sprint as reasonably possible - for varying degrees of reasonable. This comes at the expense of maintenance work, such as keeping libraries up-to-date or removing technical debt. And it incentivizes the team to cut corners on features, to not leave code in a better state than they found it, to not fix smaller bugs and instead log them somewhere for later.&lt;/p&gt;
&lt;p&gt;One solution I see to this problem, is to put an engineering manager fully in charge of the team.&lt;sup id="fnref:5"&gt;&lt;a class="footnote-ref" href="https://smallsheds.garden/blog/2023/a-backlog-item-is-a-backlog-item-is-a-backlog-item/#fn:5"&gt;2&lt;/a&gt;&lt;/sup&gt; The product manager prioritizes the features. The engineering manager prioritizes the full scope of work for the team. That's not a simple change to pull off, however.&lt;/p&gt;
&lt;p&gt;Another solution might be to change the way we use our backlogs. If a product manager gets to prioritize all the work, and the tool they use is a backlog, then we should make sure that all the work&lt;sup id="fnref:2"&gt;&lt;a class="footnote-ref" href="https://smallsheds.garden/blog/2023/a-backlog-item-is-a-backlog-item-is-a-backlog-item/#fn:2"&gt;3&lt;/a&gt;&lt;/sup&gt; is in the backlog: features, bugs, and technical debt. Let's take a look at each of these three categories of work.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://smallsheds.garden/blog/2023/a-backlog-item-is-a-backlog-item-is-a-backlog-item/"&gt;Read more…&lt;/a&gt; (7 min remaining to read)&lt;/p&gt;&lt;/div&gt;</summary>
    <category term="agile" label="agile"/>
    <category term="bugs" label="bugs"/>
    <category term="tech-debt" label="tech debt"/>
    <category term="work-management" label="work management"/>
  </entry>
  <entry>
    <title>Our work management tools are limiting our imagination</title>
    <id>https://smallsheds.garden/blog/2023/our-work-management-tools-are-limiting-our-imagination/</id>
    <updated>2023-01-29T22:34:25+01:00</updated>
    <published>2023-01-29T22:34:25+01:00</published>
    <author>
      <name>Joep Schuurkes</name>
    </author>
    <link rel="alternate" type="text/html" href="https://smallsheds.garden/blog/2023/our-work-management-tools-are-limiting-our-imagination/"/>
    <summary type="html">&lt;figure&gt;&lt;img src="https://smallsheds.garden/images/2023/work-mgt-tools/fig4-stories-on-a-wall.jpg"&gt;&lt;/figure&gt; &lt;div&gt;&lt;p&gt;Several weeks ago I had a thought that felt both serious and not serious, so &lt;a href="https://chaos.social/@joeposaurus/109635747014542350"&gt;I asked on Mastodon&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Should I write a blog post about companies leaving money on the table by not leveraging their choice of work management tool (Jira, Shortcut, etc) as a competitive advantage?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;31% said "yes" and 54% said "a post about what now?", which I suppose reflects my own feelings about the topic. And it motivated me to write this post - especially that 54%. So let's talk about work management tools, the original (user) stories, affordances and constraints, and how these tools are limiting our imagination. &lt;/p&gt;
&lt;p&gt;&lt;a href="https://smallsheds.garden/blog/2023/our-work-management-tools-are-limiting-our-imagination/"&gt;Read more…&lt;/a&gt; (11 min remaining to read)&lt;/p&gt;&lt;/div&gt;</summary>
    <category term="agile" label="agile"/>
    <category term="agile-manifesto" label="agile manifesto"/>
    <category term="quality-engineering" label="quality engineering"/>
    <category term="software-development" label="software development"/>
    <category term="tools" label="tools"/>
    <category term="work-management" label="work management"/>
  </entry>
  <entry>
    <title>Agile tester or quality engineer, who's to say?</title>
    <id>https://smallsheds.garden/blog/2022/agile-tester-or-quality-engineer-whos-to-say/</id>
    <updated>2022-11-06T16:29:25+01:00</updated>
    <published>2022-11-06T16:29:25+01:00</published>
    <author>
      <name>Joep Schuurkes</name>
    </author>
    <link rel="alternate" type="text/html" href="https://smallsheds.garden/blog/2022/agile-tester-or-quality-engineer-whos-to-say/"/>
    <summary type="html">&lt;div&gt;&lt;p&gt;In her article &lt;a href="https://web.archive.org/web/20041001003124/http://www.qualitytree.com/feature/btwq.pdf"&gt;"Better Testing, Worse Quality?"&lt;/a&gt; &lt;a href="https://ruby.social/@testobsessed"&gt;Elisabeth Hendrickson&lt;/a&gt; makes an interesting case about independent testing, i.e. testing done by an independent test team. She discovered that beyond a certain point, investigating more in independent testing will make both quality and speed go down, not up. In &lt;a href="https://itrevolution.com/podcast/the-idealcast-episode-3/"&gt;episode 3&lt;/a&gt; of the &lt;a href="https://itrevolution.com/podcast/"&gt;Idealcast&lt;/a&gt;, she summarizes her article as follows:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;"[...] when you ramp up the amount of investment in an independent test group, then given the amount of pressure that's already on the developers to deliver, it is so easy&lt;sup id="fnref:1"&gt;&lt;a class="footnote-ref" href="https://smallsheds.garden/blog/2022/agile-tester-or-quality-engineer-whos-to-say/#fn:1"&gt;1&lt;/a&gt;&lt;/sup&gt; for the developers to say, this isn't my problem anymore. Thank goodness we've got the professionals over here. It's their job to test." &lt;em&gt;(00:11:21)&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Later in the article, Elisabeth Hendrickson gives advice on how to avoid or escape this spiral of decreasing quality and speed. There are four dials you can turn either up or down:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://smallsheds.garden/blog/2022/agile-tester-or-quality-engineer-whos-to-say/"&gt;Read more…&lt;/a&gt; (2 min remaining to read)&lt;/p&gt;&lt;/div&gt;</summary>
    <category term="agile" label="agile"/>
    <category term="quality-engineering" label="quality engineering"/>
    <category term="software-testing" label="software testing"/>
  </entry>
  <entry>
    <title>The Agile Manifesto is a poor introduction to Agile</title>
    <id>https://smallsheds.garden/blog/2022/the-agile-manifesto-is-a-poor-introduction-to-agile/</id>
    <updated>2022-08-12T09:37:25+02:00</updated>
    <published>2022-08-12T09:37:25+02:00</published>
    <author>
      <name>Joep Schuurkes</name>
    </author>
    <link rel="alternate" type="text/html" href="https://smallsheds.garden/blog/2022/the-agile-manifesto-is-a-poor-introduction-to-agile/"/>
    <summary type="html">&lt;div&gt;&lt;p&gt;Last week &lt;a href="https://twitter.com/ezagroba"&gt;Elizabeth Zagroba&lt;/a&gt; &lt;a href="https://twitter.com/ezagroba/status/1557608861690912772"&gt;asked on Twitter&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;If someone was completely new to working on software on an Agile team, what would you want them to read about Agile first?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;My first thought was: "The Agile Manifesto!" After a second thought, though, I reconsidered and &lt;a href="https://twitter.com/j19sch/status/1557650105930579968"&gt;replied&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;And I would recommend against reading the Agile Manifesto without consulting any secondary sources, except if you read it in the same way as you would visit a historical site "just to see where it all happened".&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;As I wrote this, I could not really put my finger on why exactly I felt this way. The best I could come up with was that the Agile Manifesto is hard to understand on its own. You need some historical context and practical experience to make sense of it. Serendipity came to the rescue, though, as I'm currently reading &lt;a href="https://en.wikipedia.org/wiki/Seeing_Like_a_State"&gt;&lt;em&gt;Seeing Like a State&lt;/em&gt;&lt;/a&gt; by &lt;a href="https://en.wikipedia.org/wiki/James_C._Scott"&gt;James C. Scott&lt;/a&gt;. Chapter 9 of the book focuses on the Greek concept of &lt;em&gt;mētis&lt;/em&gt; (μῆτις) and how it relates to rules of thumb. Turns out that this explains why the Agile Manifesto is a poor introduction to Agile.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://smallsheds.garden/blog/2022/the-agile-manifesto-is-a-poor-introduction-to-agile/"&gt;Read more…&lt;/a&gt; (6 min remaining to read)&lt;/p&gt;&lt;/div&gt;</summary>
    <category term="agile" label="agile"/>
    <category term="agile-manifesto" label="agile manifesto"/>
    <category term="metis" label="mētis"/>
    <category term="teaching" label="teaching"/>
  </entry>
  <entry>
    <title>Uncovering Agile micro-skills at FroGS conf</title>
    <id>https://smallsheds.garden/blog/2022/uncovering-agile-micro-skills-at-frogsconf/</id>
    <updated>2022-03-14T16:56:09+01:00</updated>
    <published>2022-03-14T16:56:09+01:00</published>
    <author>
      <name>Joep Schuurkes</name>
    </author>
    <link rel="alternate" type="text/html" href="https://smallsheds.garden/blog/2022/uncovering-agile-micro-skills-at-frogsconf/"/>
    <summary type="html">&lt;div&gt;&lt;p&gt;At the second &lt;a href="https://frogsconf.nl/"&gt;FroGS conf Open Space&lt;/a&gt; on 12 March 2022 I facilitated a session based on my blog post &lt;a href="https://smallsheds.garden/blog/2022/four-skills-to-embody-the-four-agile-values/"&gt;&lt;em&gt;"Four skills to embody the four Agile values"&lt;/em&gt;&lt;/a&gt;. My goal with the session was to uncover more Agile (micro-)skills. In this post I'll share what we did during the session and I'll close off with some thoughts on the biggest challenge of this exercise: too many skills. Before I start however, a big thank you to everyone who participated in the session!&lt;/p&gt;
&lt;h2&gt;What we value&lt;/h2&gt;
&lt;p&gt;I opened the session with asking people to add stickies to the board of things they valued in Agile software development. When was I preparing the Miro board before the session, I labeled this part of the board "values". Then I remembered I had decided earlier to label it "what we value", so as to avoid the discussion about what values are and aren't. The topic did come up (i.e. the relation between values, ethics and morals), so I was glad I could respond by saying it's a great topic, but not for this session.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://smallsheds.garden/blog/2022/uncovering-agile-micro-skills-at-frogsconf/"&gt;Read more…&lt;/a&gt; (4 min remaining to read)&lt;/p&gt;&lt;/div&gt;</summary>
    <category term="agile" label="agile"/>
    <category term="conferences" label="conferences"/>
    <category term="skills" label="skills"/>
    <category term="values" label="values"/>
  </entry>
  <entry>
    <title>Four skills to embody the four Agile values</title>
    <id>https://smallsheds.garden/blog/2022/four-skills-to-embody-the-four-agile-values/</id>
    <updated>2022-02-06T17:04:06+01:00</updated>
    <published>2022-02-06T17:04:06+01:00</published>
    <author>
      <name>Joep Schuurkes</name>
    </author>
    <link rel="alternate" type="text/html" href="https://smallsheds.garden/blog/2022/four-skills-to-embody-the-four-agile-values/"/>
    <summary type="html">&lt;div&gt;&lt;p&gt;If you're familiar with the &lt;a href="https://agilemanifesto.org/"&gt;Agile Manifesto&lt;/a&gt;, you're familiar with its four values:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Individuals and interactions over processes and tools&lt;/li&gt;
&lt;li&gt;Working software over comprehensive documentation&lt;/li&gt;
&lt;li&gt;Customer collaboration over contract negotiation&lt;/li&gt;
&lt;li&gt;Responding to change over following a plan&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Recently this made me wonder: how do you apply these values? How do you live them? What skills do you need to embody them? In this post I won't be sharing any definitive or complete answers, but as a starting point I have identified four skills needed to embody the four Agile values.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://smallsheds.garden/blog/2022/four-skills-to-embody-the-four-agile-values/"&gt;Read more…&lt;/a&gt; (9 min remaining to read)&lt;/p&gt;&lt;/div&gt;</summary>
    <category term="agile" label="agile"/>
    <category term="skills" label="skills"/>
    <category term="values" label="values"/>
  </entry>
  <entry>
    <title>How to run a remote Elephant Carpaccio</title>
    <id>https://smallsheds.garden/blog/2021/how-to-run-a-remote-elephant-carpaccio/</id>
    <updated>2021-11-28T13:35:16+01:00</updated>
    <published>2021-11-28T13:35:16+01:00</published>
    <author>
      <name>Joep Schuurkes</name>
    </author>
    <link rel="alternate" type="text/html" href="https://smallsheds.garden/blog/2021/how-to-run-a-remote-elephant-carpaccio/"/>
    <summary type="html">&lt;div&gt;&lt;p&gt;In a &lt;a href="https://smallsheds.garden/blog/2021/two-times-remote-elephant-carpaccio/"&gt;previous post&lt;/a&gt; I promised to write a blog post on how I would run remote &lt;a href="https://web.archive.org/web/20171114154855/http://alistair.cockburn.us/Elephant+Carpaccio+exercise"&gt;Elephant Carpaccio&lt;/a&gt; if I get the opportunity to run it a third time. This is that post, but not exactly. In the mean time I got the opportunity to run the workshop one more time. That gave me the opportunity to try out some new things and write this blog post on how to run a remote Elephant Carpaccio.&lt;/p&gt;
&lt;p&gt;I should be clear on one thing, though. This post is not a full facilitation guide. It can't be with the limited experience I have. I do hope and think that reading the official(?) &lt;a href="https://docs.google.com/document/d/1TCuuu-8Mm14oxsOnlk8DqfZAA1cvtYu9WGv67Yj_sSk/pub"&gt;facilitation guide&lt;/a&gt; and this blog post, gives you a solid base to start running the Elephant Carpaccio exercise remotely yourself.&lt;/p&gt;
&lt;h3&gt;The preparation&lt;/h3&gt;
&lt;p&gt;Take your time to prep. Taking &lt;a href="https://smallsheds.garden/blog/2021/lessons-learned-after-facilitating-elephant-carpaccio/#take-your-time-for-the-before-and-after"&gt;as much time as the duration&lt;/a&gt; of the workshop is a good start. (That's assuming you are already familiar with the Elephant Carpaccio exercise, though. So if you're not, do that first.) Get a clear picture in your head what you want to achieve with the workshop. Run through it in your mind in detail. Decide which options you have in which parts of the workshop to make changes as the workshop happens.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://smallsheds.garden/blog/2021/how-to-run-a-remote-elephant-carpaccio/"&gt;Read more…&lt;/a&gt; (8 min remaining to read)&lt;/p&gt;&lt;/div&gt;</summary>
    <category term="agile" label="agile"/>
    <category term="elephant-carpaccio" label="elephant carpaccio"/>
    <category term="facilitation" label="facilitation"/>
    <category term="small-steps" label="small steps"/>
    <category term="workshop" label="workshop"/>
  </entry>
  <entry>
    <title>Two times remote Elephant Carpaccio</title>
    <id>https://smallsheds.garden/blog/2021/two-times-remote-elephant-carpaccio/</id>
    <updated>2021-10-03T21:28:50+02:00</updated>
    <published>2021-10-03T21:28:50+02:00</published>
    <author>
      <name>Joep Schuurkes</name>
    </author>
    <link rel="alternate" type="text/html" href="https://smallsheds.garden/blog/2021/two-times-remote-elephant-carpaccio/"/>
    <summary type="html">&lt;div&gt;&lt;p&gt;A while ago I asked the teams in my department which parts of agile software development they wanted to learn more about. One of the topics that stood out, was: you have a high-level description of a new feature, then what? That's still quite a wide topic, so the question become on what part of that problem would I focus first.&lt;/p&gt;
&lt;p&gt;Quite quickly I settled on feature slicing - for several reasons. First of all, I had noticed teams delivering somewhat big chunks of functionality, split up into development tasks instead of vertical slices. Secondly, a team I had worked with on feature slicing, had gained some valuable planning flexibility because of it. And they continued the practice, breaking up projects vertically. Finally, I was aware that there was a workshop called "Elephant Carpaccio", focused on feature slicing. So I could use that, or build on it, but at least I wouldn't have to come up with something from scratch.&lt;/p&gt;
&lt;h3&gt;The Elephant Carpaccio exercise&lt;/h3&gt;
&lt;p&gt;The Elephant Carpaccio exercise was invented by Alistair Cockburn&lt;sup id="fnref:1"&gt;&lt;a class="footnote-ref" href="https://smallsheds.garden/blog/2021/two-times-remote-elephant-carpaccio/#fn:1"&gt;1&lt;/a&gt;&lt;/sup&gt;. Its purpose is to get people to practice &lt;em&gt;"nano-incremental"&lt;/em&gt; development, i.e. slicing something small enough you can program it in 15-30 minutes. The exercise tries to bring home its point through exageration: you are asked to slice a very simple application in 15-20 slices, where you would normally do it in 2-3 slices. Then you get five iterations of 8 minutes to build those slices. To me that's the coolest part of the exercise: you actually get to experience what's it like to work with such small slices. As Alistair Cockburn himself says about the exercise: &lt;em&gt;"the true learning is the actual programming section"&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://smallsheds.garden/blog/2021/two-times-remote-elephant-carpaccio/"&gt;Read more…&lt;/a&gt; (5 min remaining to read)&lt;/p&gt;&lt;/div&gt;</summary>
    <category term="agile" label="agile"/>
    <category term="elephant-carpaccio" label="elephant carpaccio"/>
    <category term="facilitation" label="facilitation"/>
    <category term="small-steps" label="small steps"/>
    <category term="workshop" label="workshop"/>
  </entry>
  <entry>
    <title>An approach to teaching Agile 20 years after the Agile Manifesto</title>
    <id>https://smallsheds.garden/blog/2021/an-approach-to-teaching-agile-20-years-after-the-agile-manifesto/</id>
    <updated>2021-04-26T16:54:34+02:00</updated>
    <published>2021-04-26T16:54:34+02:00</published>
    <author>
      <name>Joep Schuurkes</name>
    </author>
    <link rel="alternate" type="text/html" href="https://smallsheds.garden/blog/2021/an-approach-to-teaching-agile-20-years-after-the-agile-manifesto/"/>
    <summary type="html">&lt;div&gt;&lt;p&gt;For a few weeks I've been thinking about how I would teach Agile&lt;sup id="fnref:1"&gt;&lt;a class="footnote-ref" href="https://smallsheds.garden/blog/2021/an-approach-to-teaching-agile-20-years-after-the-agile-manifesto/#fn:1"&gt;1&lt;/a&gt;&lt;/sup&gt; in 2021, 20 years after the &lt;a href="https://agilemanifesto.org/"&gt;Agile Manifesto&lt;/a&gt; was published. After sharing my thoughts at &lt;a href="https://citconf.com/virtual2021/"&gt;CitCon Europe 2021 Virtual&lt;/a&gt; and having an interesting conversation about the state of Agile and how to teach it, I figured it's time to write a blog post about it.&lt;/p&gt;
&lt;h3&gt;Why I started thinking about this&lt;/h3&gt;
&lt;p&gt;As Allan Kelly stated in a &lt;a href="https://www.allankellyassociates.co.uk/archives/2762/agile-won-the-war-but-lost-the-peace/"&gt;2018 blog post&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;"Agile won the war but lost the peace."&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Everyone is doing Agile, even though very few people are living the dream promised by Agile. This makes it very difficult to use "Agile" as a label, as a name for something. When someone says "Agile", are they referring to what you're already doing or to something they think you should be doing?&lt;/p&gt;
&lt;p&gt;Additionally, the &lt;a href="https://agilemanifesto.org/"&gt;Agile Manifesto&lt;/a&gt; was &lt;a href="https://agilemanifesto.org/history.html"&gt;written in 2001&lt;/a&gt;, based on what its authors were doing in the 1990s in response to the common ways of doing software development of that time. And since the Manifesto we've seen the introduction of Lean, of DevOps, and of CI/CD. So the amount of history that comes with Agile is large and it raises the question how much (if any) we should teach - especially since a lot of it is folklore instead of history&lt;sup id="fnref:2"&gt;&lt;a class="footnote-ref" href="https://smallsheds.garden/blog/2021/an-approach-to-teaching-agile-20-years-after-the-agile-manifesto/#fn:2"&gt;2&lt;/a&gt;&lt;/sup&gt;. Doing Agile's history justice would probably cost more time than makes sense if your goal is to teach people how to develop software in an Agile way&lt;sup id="fnref:3"&gt;&lt;a class="footnote-ref" href="https://smallsheds.garden/blog/2021/an-approach-to-teaching-agile-20-years-after-the-agile-manifesto/#fn:3"&gt;3&lt;/a&gt;&lt;/sup&gt;. And a lot of that history was a relatively long time ago, which is why I titled my CitCon session "Teaching Agile to people younger than the Manifesto".&lt;/p&gt;
&lt;p&gt;&lt;a href="https://smallsheds.garden/blog/2021/an-approach-to-teaching-agile-20-years-after-the-agile-manifesto/"&gt;Read more…&lt;/a&gt; (4 min remaining to read)&lt;/p&gt;&lt;/div&gt;</summary>
    <category term="agile" label="agile"/>
    <category term="cicd" label="ci/cd"/>
    <category term="devops" label="devops"/>
    <category term="lean" label="lean"/>
    <category term="teaching" label="teaching"/>
  </entry>
</feed>

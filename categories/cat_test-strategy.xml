<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Joep Schuurkes (Posts about test strategy)</title><link>https://j19sch.github.io/</link><description></description><atom:link href="https://j19sch.github.io/categories/cat_test-strategy.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><copyright>Contents © 2021 &lt;a href="mailto:j19sch@hey.com"&gt;Joep Schuurkes&lt;/a&gt; 
&lt;a href="http://creativecommons.org/licenses/by/4.0/"&gt;
&lt;img alt="Creative Commons License" style="border-width:0;margin: 0px 0px 0px 0px" src="https://i.creativecommons.org/l/by/4.0/80x15.png" /&gt;
&lt;/a&gt;
</copyright><lastBuildDate>Sun, 28 Nov 2021 15:04:56 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Test strategy primer</title><link>https://j19sch.github.io/blog/2019/test-strategy-primer/</link><dc:creator>Joep Schuurkes</dc:creator><description>&lt;div&gt;&lt;p&gt;&lt;em&gt;I originally wrote this primer to share with people at work. The first section is intended to be generally applicable; the second not necessarily so. The main influences on this primer are:&lt;/em&gt;&lt;br&gt;
&lt;em&gt;- Rapid Software Testing's &lt;a href="https://www.satisfice.com/tools/htsm.pdf"&gt;Heuristic Test Strategy Model&lt;/a&gt;&lt;/em&gt;&lt;br&gt;
&lt;em&gt;- James Lyndsay's &lt;a href="http://www.workroom-productions.com/papers/Exploration%20and%20Strategy.pdf"&gt;Why Exploration has a place in any Strategy&lt;/a&gt;&lt;/em&gt;&lt;br&gt;
&lt;em&gt;- Rikard Edgren's &lt;a href="http://www.thetesteye.com/papers/TheLittleBlackBookOnTestDesign.pdf"&gt;Little Black Book on Test Design&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;This document contains two sections:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Why have a test strategy? - what is a test strategy and what's its purpose&lt;/li&gt;
&lt;li&gt;Test strategy checklist - checklist for describing your test strategy&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Why have a test strategy?&lt;/h3&gt;
&lt;p&gt;The purpose of a test strategy is to answer the question: "How do we know that what we are building, is good enough?" As such, every team has a test strategy, even if it's only implicitly defined through the actions of the team members.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://j19sch.github.io/blog/2019/test-strategy-primer/"&gt;Read more…&lt;/a&gt; (3 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>context-driven testing</category><category>test management</category><category>test strategy</category><guid>https://j19sch.github.io/blog/2019/test-strategy-primer/</guid><pubDate>Tue, 29 Jan 2019 20:34:19 GMT</pubDate></item><item><title>Regression testing, it means less than you think</title><link>https://j19sch.github.io/blog/2016/regression-testing-it-means-less-than-you-think/</link><dc:creator>Joep Schuurkes</dc:creator><description>&lt;div&gt;&lt;p&gt;The past weeks I have made several attempts at a blog post about regression testing. About how we use it to refer to different things: tests running on a CI server, people executing test scripts, etc. And about how often the term really doesn't mean much at all, yet nobody questions you when you use it: "What are you doing?" "Regression testing." "Oh good, carry on." The point of the post would be to argue we should use the term 'regression testing' a lot less, because most of the time we can be more specific without having to be more verbose.&lt;/p&gt;
&lt;p&gt;However, the more I thought about (what I would qualify as) proper regression testing, the more I felt that regression versus progression (or progressive) testing is a distinction without difference. One interesting observation in this regard is that "regression testing" returns 30 times more results on Google than "progression testing" and "progressive testing" combined. So what's going on here if we have a dichotomy with one member producing so much more discussion than the other? And there's more: regression testing is commonly contrasted with test types like functional testing and usability testing. But how then should I categorize a regression test focusing on functionality&lt;sup id="fnref:1"&gt;&lt;a class="footnote-ref" href="https://j19sch.github.io/blog/2016/regression-testing-it-means-less-than-you-think/#fn:1"&gt;1&lt;/a&gt;&lt;/sup&gt;?&lt;/p&gt;
&lt;p&gt;&lt;a href="https://j19sch.github.io/blog/2016/regression-testing-it-means-less-than-you-think/"&gt;Read more…&lt;/a&gt; (7 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>regression testing</category><category>semantics</category><category>test management</category><category>test strategy</category><guid>https://j19sch.github.io/blog/2016/regression-testing-it-means-less-than-you-think/</guid><pubDate>Sun, 03 Jan 2016 18:42:26 GMT</pubDate></item><item><title>Why your Product Risk Analysis isn't</title><link>https://j19sch.github.io/blog/2013/why-your-product-risk-analysis-isnt/</link><dc:creator>Joep Schuurkes</dc:creator><description>&lt;div&gt;&lt;p&gt;Ok, going to try to keep this short and ranty (rantish?).&lt;/p&gt;
&lt;p&gt;Typical test advice is to do a Product Risk Analysis (PRA, mind the capitalisation!) and based on that you decide what to test and how thoroughly. The most common way to do a PRA is with a workshop. Put some people in a room with a lot of stickies, let them list all the risks they can think of and then have them score them. Et voilà, Product Risk Analysis is done!&lt;/p&gt;
&lt;p&gt;But that doesn't really make sense, now does it? If someone were to give you an object and asked you "What could possibly go wrong with this?", what would you do? Gather a bunch of people with some knowledge of the object, yet no actual experience with it and do a workshop imagining things that could go wrong? That's not an Analysis (capital A!), that's a SWAG – a scientific wild ass guess.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://j19sch.github.io/blog/2013/why-your-product-risk-analysis-isnt/"&gt;Read more…&lt;/a&gt; (1 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>test management</category><category>test reporting</category><category>test strategy</category><guid>https://j19sch.github.io/blog/2013/why-your-product-risk-analysis-isnt/</guid><pubDate>Sun, 23 Jun 2013 12:34:36 GMT</pubDate></item></channel></rss>
<?xml version='1.0' encoding='UTF-8'?>
<?xml-stylesheet href="https://smallsheds.garden/assets/xml/atom.xsl" type="text/xsl media="all"?>
<feed xml:lang="en" xmlns="http://www.w3.org/2005/Atom">
  <title>Joep Schuurkes (Posts about software testing)</title>
  <id>https://smallsheds.garden/categories/software-testing.atom</id>
  <updated>2022-12-29T16:36:55Z</updated>
  <author>
    <name>Joep Schuurkes</name>
  </author>
  <link rel="self" type="application/atom+xml" href="https://smallsheds.garden/categories/software-testing.atom"/>
  <link rel="alternate" type="text/html" href="https://smallsheds.garden/categories/software-testing/"/>
  <generator uri="https://getnikola.com/">Nikola</generator>
  <entry>
    <title>Agile tester or quality engineer, who's to say?</title>
    <id>https://smallsheds.garden/blog/2022/agile-tester-or-quality-engineer-whos-to-say/</id>
    <updated>2022-11-06T16:29:25+01:00</updated>
    <published>2022-11-06T16:29:25+01:00</published>
    <author>
      <name>Joep Schuurkes</name>
    </author>
    <link rel="alternate" type="text/html" href="https://smallsheds.garden/blog/2022/agile-tester-or-quality-engineer-whos-to-say/"/>
    <summary type="html">&lt;div&gt;&lt;p&gt;In her article &lt;a href="https://web.archive.org/web/20041001003124/http://www.qualitytree.com/feature/btwq.pdf"&gt;"Better Testing, Worse Quality?"&lt;/a&gt; &lt;a href="https://ruby.social/@testobsessed"&gt;Elisabeth Hendrickson&lt;/a&gt; makes an interesting case about independent testing, i.e. testing done by an independent test team. She discovered that beyond a certain point, investigating more in independent testing will make both quality and speed go down, not up. In &lt;a href="https://itrevolution.com/podcast/the-idealcast-episode-3/"&gt;episode 3&lt;/a&gt; of the &lt;a href="https://itrevolution.com/podcast/"&gt;Idealcast&lt;/a&gt;, she summarizes her article as follows:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;"[...] when you ramp up the amount of investment in an independent test group, then given the amount of pressure that's already on the developers to deliver, it is so easy&lt;sup id="fnref:1"&gt;&lt;a class="footnote-ref" href="https://smallsheds.garden/blog/2022/agile-tester-or-quality-engineer-whos-to-say/#fn:1"&gt;1&lt;/a&gt;&lt;/sup&gt; for the developers to say, this isn't my problem anymore. Thank goodness we've got the professionals over here. It's their job to test." &lt;em&gt;(00:11:21)&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Later in the article, Elisabeth Hendrickson gives advice on how to avoid or escape this spiral of decreasing quality and speed. There are four dials you can turn either up or down:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://smallsheds.garden/blog/2022/agile-tester-or-quality-engineer-whos-to-say/"&gt;Read more…&lt;/a&gt; (2 min remaining to read)&lt;/p&gt;&lt;/div&gt;</summary>
    <category term="agile" label="agile"/>
    <category term="quality-engineering" label="quality engineering"/>
    <category term="software-testing" label="software testing"/>
  </entry>
  <entry>
    <title>Quality: different purposes, different definitions</title>
    <id>https://smallsheds.garden/blog/2022/quality-different-purposes-different-definitions/</id>
    <updated>2022-08-24T19:41:25+02:00</updated>
    <published>2022-08-24T19:41:25+02:00</published>
    <author>
      <name>Joep Schuurkes</name>
    </author>
    <link rel="alternate" type="text/html" href="https://smallsheds.garden/blog/2022/quality-different-purposes-different-definitions/"/>
    <summary type="html">&lt;div&gt;&lt;p&gt;For years when asked to define quality, I've said "value to a person who matters"&lt;sup id="fnref:1"&gt;&lt;a class="footnote-ref" href="https://smallsheds.garden/blog/2022/quality-different-purposes-different-definitions/#fn:1"&gt;1&lt;/a&gt;&lt;/sup&gt;. Not too long ago I used that definition in the &lt;a href="https://smallsheds.garden/blog/2021/choosing-your-value-system/"&gt;first post&lt;/a&gt; of my four-part series "Thinking about quality". However, in the &lt;a href="https://smallsheds.garden/blog/2021/thinking-about-quality-so-what-to-do/"&gt;fourth post&lt;/a&gt; of that series I also said that quality is something emergent. And I continued with:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;We can have long discussions about what quality is, but that's a different question from how do you get quality?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Today I took this one step further, when I realized that depending on the context, I talk very differently about quality. And while I may not define 'quality' explicitly in every conversation, implicitly I'm still using different definitions. That alone, I think is interesting: instead of a single, general definition of quality that always applies, I have different definitions depending on their purpose&lt;sup id="fnref:2"&gt;&lt;a class="footnote-ref" href="https://smallsheds.garden/blog/2022/quality-different-purposes-different-definitions/#fn:2"&gt;2&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://smallsheds.garden/blog/2022/quality-different-purposes-different-definitions/"&gt;Read more…&lt;/a&gt; (1 min remaining to read)&lt;/p&gt;&lt;/div&gt;</summary>
    <category term="quality" label="quality"/>
    <category term="quality-engineering" label="quality engineering"/>
    <category term="semantics" label="semantics"/>
    <category term="software-development" label="software development"/>
    <category term="software-testing" label="software testing"/>
  </entry>
  <entry>
    <title>"Tester" is an overloaded variable</title>
    <id>https://smallsheds.garden/blog/2022/tester-is-an-overloaded-variable/</id>
    <updated>2022-08-04T11:39:25+02:00</updated>
    <published>2022-08-04T11:39:25+02:00</published>
    <author>
      <name>Joep Schuurkes</name>
    </author>
    <link rel="alternate" type="text/html" href="https://smallsheds.garden/blog/2022/tester-is-an-overloaded-variable/"/>
    <summary type="html">&lt;div&gt;&lt;p&gt;Yesterday I came across a post on LinkedIn explaining why there are no testers in Scrum&lt;sup id="fnref:1"&gt;&lt;a class="footnote-ref" href="https://smallsheds.garden/blog/2022/tester-is-an-overloaded-variable/#fn:1"&gt;1&lt;/a&gt;&lt;/sup&gt;. What struck me most about the post was the amount of work the word "tester" was doing. In one sentence it meant one thing (a role in a team), in the next sentence something else (a step in the process), and so on. Hence the title of this post: the word "tester" was being used as an overloaded variable. So let's do some unpacking.&lt;/p&gt;
&lt;h2&gt;Testers to people management&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;"Having a tester"&lt;/em&gt; means that there are people with the official title of "tester" or "QA engineer" or whatever within the company. For the purposes of people management&lt;sup id="fnref:2"&gt;&lt;a class="footnote-ref" href="https://smallsheds.garden/blog/2022/tester-is-an-overloaded-variable/#fn:2"&gt;2&lt;/a&gt;&lt;/sup&gt;, there's a distinction between this role and the other roles in the company. This allows for more specific expectations about the role, for different career paths and salary scales, etc.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://smallsheds.garden/blog/2022/tester-is-an-overloaded-variable/"&gt;Read more…&lt;/a&gt; (4 min remaining to read)&lt;/p&gt;&lt;/div&gt;</summary>
    <category term="management" label="management"/>
    <category term="semantics" label="semantics"/>
    <category term="software-testing" label="software testing"/>
    <category term="test-management" label="test management"/>
  </entry>
  <entry>
    <title>Three thoughts on risk-based testing</title>
    <id>https://smallsheds.garden/blog/2022/three-thoughts-on-risk-based-testing/</id>
    <updated>2022-07-17T11:56:30+02:00</updated>
    <published>2022-07-17T11:56:30+02:00</published>
    <author>
      <name>Joep Schuurkes</name>
    </author>
    <link rel="alternate" type="text/html" href="https://smallsheds.garden/blog/2022/three-thoughts-on-risk-based-testing/"/>
    <summary type="html">&lt;div&gt;&lt;p&gt;The past month I've been thinking about risk-based testing. This post collects three thoughts on risk-based testing I kept returning to.&lt;/p&gt;
&lt;h2&gt;If not based on risks, then based on what?&lt;/h2&gt;
&lt;p&gt;About a month ago I &lt;a href="https://twitter.com/j19sch/status/1533760354647523330"&gt;tweeted&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;What are the alternatives to risk-based testing?&lt;br&gt;
Requirements-based? I'd argue that's a subset of risk-based.&lt;br&gt;
Unguided? That's either a bad idea ("we hope to get lucky") or aimed at the risk of unknown unknowns.&lt;br&gt;
Any other options? Because something about the term is bothering me.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;My question was inspired by the &lt;a href="https://smallsheds.garden/slides/rtc2019-testing-types.html#/15/0/1"&gt;"opposite" heuristic&lt;/a&gt; from my talk about &lt;a href="https://smallsheds.garden/slides/rtc2019-testing-types.html#/"&gt;testing types&lt;/a&gt;: if we have some kind of category, what's the name for the things not in that category? Applied to risk-based testing: what's the name for testing that's not risk-based?&lt;/p&gt;
&lt;p&gt;&lt;a href="https://smallsheds.garden/blog/2022/three-thoughts-on-risk-based-testing/"&gt;Read more…&lt;/a&gt; (3 min remaining to read)&lt;/p&gt;&lt;/div&gt;</summary>
    <category term="coverage" label="coverage"/>
    <category term="software-testing" label="software testing"/>
    <category term="test-management" label="test management"/>
    <category term="test-strategy" label="test strategy"/>
  </entry>
  <entry>
    <title>Reflections on my testing manifesto</title>
    <id>https://smallsheds.garden/blog/2018/reflections-on-my-testing-manifesto/</id>
    <updated>2018-12-22T17:43:10+01:00</updated>
    <published>2018-12-22T17:43:10+01:00</published>
    <author>
      <name>Joep Schuurkes</name>
    </author>
    <link rel="alternate" type="text/html" href="https://smallsheds.garden/blog/2018/reflections-on-my-testing-manifesto/"/>
    <summary type="html">&lt;div&gt;&lt;p&gt;Earlier this month I published my &lt;a href="https://smallsheds.garden/blog/2018/manifesto-for-software-testing/"&gt;Manifesto for software testing&lt;/a&gt;. This manifesto is my attempt to bring together what I have learned about testing from the context-driven, agile and DevOps communities. Below you can find the manifesto with my reflections on it.&lt;/p&gt;
&lt;h5&gt;1. Testing is investigating in order to evaluate a product.&lt;/h5&gt;
&lt;p&gt;This definition is clearly influenced by James Bach's "questioning a product in order to evaluate it". I'm not sure at which point I started misremembering his definition as "investigating a product...", but it works well with a change I did make intentionally: moving "a product" to the second part of the definition. As explained in 6. I believe that in order to evaluate the product, we need to investigate a number of different things, not only the product.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://smallsheds.garden/blog/2018/reflections-on-my-testing-manifesto/"&gt;Read more…&lt;/a&gt; (5 min remaining to read)&lt;/p&gt;&lt;/div&gt;</summary>
    <category term="agile" label="agile"/>
    <category term="context-driven-testing" label="context-driven testing"/>
    <category term="devops" label="devops"/>
    <category term="manifesto" label="manifesto"/>
    <category term="software-testing" label="software testing"/>
  </entry>
  <entry>
    <title>Manifesto for software testing</title>
    <id>https://smallsheds.garden/blog/2018/manifesto-for-software-testing/</id>
    <updated>2018-12-04T20:44:51+01:00</updated>
    <published>2018-12-04T20:44:51+01:00</published>
    <author>
      <name>Joep Schuurkes</name>
    </author>
    <link rel="alternate" type="text/html" href="https://smallsheds.garden/blog/2018/manifesto-for-software-testing/"/>
    <summary type="html">&lt;div&gt;&lt;p&gt;1. Testing is investigating in order to evaluate a product.&lt;/p&gt;
&lt;p&gt;2. An evaluation is a judgement about quality – quality being value to persons who matter.&lt;/p&gt;
&lt;p&gt;3. This makes testing a fundamentally human and contextual activity.&lt;/p&gt;
&lt;p&gt;4. As such, testing is an exploratory and open-ended activity, requiring continuous evaluation of and experimentation with our practices.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://smallsheds.garden/blog/2018/manifesto-for-software-testing/"&gt;Read more…&lt;/a&gt; (1 min remaining to read)&lt;/p&gt;&lt;/div&gt;</summary>
    <category term="agile" label="agile"/>
    <category term="context-driven-testing" label="context-driven testing"/>
    <category term="devops" label="devops"/>
    <category term="manifesto" label="manifesto"/>
    <category term="software-testing" label="software testing"/>
  </entry>
  <entry>
    <title>Information debt</title>
    <id>https://smallsheds.garden/blog/2014/information-debt/</id>
    <updated>2014-07-13T16:50:21+02:00</updated>
    <published>2014-07-13T16:50:21+02:00</published>
    <author>
      <name>Joep Schuurkes</name>
    </author>
    <link rel="alternate" type="text/html" href="https://smallsheds.garden/blog/2014/information-debt/"/>
    <summary type="html">&lt;div&gt;&lt;p&gt;Last week ago the following happened on twitter:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;New word of the day: "information debt". It's like technical debt, but related to information, communication, models, docs, visualisations.&lt;br&gt;
&lt;em&gt;- Joep Schuurkes (@j19sch) &lt;a href="https://twitter.com/j19sch/statuses/486534198803841024"&gt;July 8, 2014&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div&gt;&lt;/div&gt;

&lt;blockquote&gt;
&lt;p&gt;@j19sch: New word of the day: "information debt" =&amp;gt; blogpost coming up ?!?!?&lt;br&gt;
&lt;em&gt;- Simon P. Schrijver (@SimonSaysNoMore) &lt;a href="https://twitter.com/SimonSaysNoMore/statuses/486551279590977536"&gt;July 8, 2014&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div&gt;&lt;/div&gt;

&lt;blockquote&gt;
&lt;p&gt;@SimonSaysNoMore Wasn't planning to, but now you made me think about it, so yes. Damn you! :-P&lt;br&gt;
&lt;em&gt;- Joep Schuurkes (@j19sch) &lt;a href="https://twitter.com/j19sch/statuses/486555404089188352"&gt;July 8, 2014&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;In case you don't know what technical debt is, you might want to read &lt;a href="http://techblog.net-a-porter.com/2011/10/agile-tetris/"&gt;this&lt;/a&gt; first. (It's the oldest source I could find of the technical debt-tetris analogy, by the way. If you know of an older one, please leave a comment.)&lt;/p&gt;
&lt;p&gt;&lt;a href="https://smallsheds.garden/blog/2014/information-debt/"&gt;Read more…&lt;/a&gt; (3 min remaining to read)&lt;/p&gt;&lt;/div&gt;</summary>
    <category term="information-debt" label="information debt"/>
    <category term="software-testing" label="software testing"/>
    <category term="vipt" label="VIPT"/>
  </entry>
  <entry>
    <title>Five leftover thoughts on software testing</title>
    <id>https://smallsheds.garden/blog/2013/five-leftover-thoughts-on-software-testing/</id>
    <updated>2013-08-03T12:28:32+02:00</updated>
    <published>2013-08-03T12:28:32+02:00</published>
    <author>
      <name>Joep Schuurkes</name>
    </author>
    <link rel="alternate" type="text/html" href="https://smallsheds.garden/blog/2013/five-leftover-thoughts-on-software-testing/"/>
    <summary type="html">&lt;div&gt;&lt;p&gt;Defect severity 'Skynet': If this gets to production, we're screwed. Really screwed.&lt;/p&gt;
&lt;p&gt;The problem with templates is that the people who need them shouldn't be writing the document in the first place and that the people who don't need them, have trouble shaking off the vague sense of obligation to adhere to them.&lt;/p&gt;
&lt;p&gt;Happy path application: application that works perfectly fine as long as you stick to the beaten path with your eyes half-closed.&lt;/p&gt;
&lt;p&gt;The contents of a test plan can be divided into the following four categories: good stuff, cover your ass, bullshit, trivialities.&lt;/p&gt;
&lt;p&gt;Buddhist software development: there is no progress, only a never-ending cycle of suffering.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://smallsheds.garden/blog/2013/five-leftover-thoughts-on-software-testing/"&gt;Read more…&lt;/a&gt; (1 min remaining to read)&lt;/p&gt;&lt;/div&gt;</summary>
    <category term="semantics" label="semantics"/>
    <category term="software-testing" label="software testing"/>
    <category term="test-management" label="test management"/>
  </entry>
  <entry>
    <title>Why I dislike test management</title>
    <id>https://smallsheds.garden/blog/2013/why-i-dislike-test-management/</id>
    <updated>2013-07-15T20:10:03+02:00</updated>
    <published>2013-07-15T20:10:03+02:00</published>
    <author>
      <name>Joep Schuurkes</name>
    </author>
    <link rel="alternate" type="text/html" href="https://smallsheds.garden/blog/2013/why-i-dislike-test-management/"/>
    <summary type="html">&lt;div&gt;&lt;p&gt;As I am enjoying these short, not very nuanced, not extremely well thought out blog posts, here’s another one.&lt;/p&gt;
&lt;p&gt;Some people seem to think that it makes sense to think of testing as a project within a project, so they apply project management tools and techniques to testing. This simply doesn’t work.&lt;/p&gt;
&lt;p&gt;Because what are the tools and techniques do they use? A plan with milestones no one is ever going to make as unexpected stuff tends to happen. A budget that is too tight because it’s based on that same plan. Entry criteria that are not met, but never mind, we’re running out of time so you need to start testing anyhow. And finally exit criteria that we fail to meet as well, but hey we’ll go live anyway, because the software really isn’t that bad (or so we hope).&lt;/p&gt;
&lt;p&gt;So in the end, a lot of time and effort is spent on producing documents that are of little use in guiding the actual testing effort. The only thing they do is give some people a warm and fuzzy illusion of control.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://smallsheds.garden/blog/2013/why-i-dislike-test-management/"&gt;Read more…&lt;/a&gt; (1 min remaining to read)&lt;/p&gt;&lt;/div&gt;</summary>
    <category term="software-testing" label="software testing"/>
    <category term="test-management" label="test management"/>
    <category term="test-strategy" label="test strategy"/>
  </entry>
  <entry>
    <title>Some thoughts after attending the 'Getting a Grip on Exploratory Testing' workshop</title>
    <id>https://smallsheds.garden/blog/2012/some-thoughts-after-attending-the-getting-a-grip-on-exploratory-testing-workshop/</id>
    <updated>2012-04-29T19:55:30+02:00</updated>
    <published>2012-04-29T19:55:30+02:00</published>
    <author>
      <name>Joep Schuurkes</name>
    </author>
    <link rel="alternate" type="text/html" href="https://smallsheds.garden/blog/2012/some-thoughts-after-attending-the-getting-a-grip-on-exploratory-testing-workshop/"/>
    <summary type="html">&lt;div&gt;&lt;p&gt;About two weeks ago I attended &lt;a href="http://www.workroom-productions.com/"&gt;James Lyndsay&lt;/a&gt;'s 'Getting a Grip on Exploratory Testing' workshop in Amsterdam. So it's about time to write something about it…&lt;/p&gt;
&lt;p&gt;Now one of the things I dislike about workshop blog posts is that people will say "It was great! And person X is such a good trainer!" without saying much about the content of the workshop. However, I find myself now writing this post and thinking: I shouldn't post a full summary of the workshop. Not that it would spoil too much for any future attendee: most of the workshop consists of exercises and discussion. But posting a summary of the workshop that James has put a lot of effort in to create, just doesn't feel right. So let me just say this: the workshop was great and James is such a good trainer! :-D&lt;/p&gt;
&lt;p&gt;Now that's out of the way, there are a few things from the workshop I'd like to share. Of course, the usual disclaimer applies: these are my thoughts on what was presented during the workshop. Any misrepresentations are my responsibility.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://smallsheds.garden/blog/2012/some-thoughts-after-attending-the-getting-a-grip-on-exploratory-testing-workshop/"&gt;Read more…&lt;/a&gt; (4 min remaining to read)&lt;/p&gt;&lt;/div&gt;</summary>
    <category term="exploration" label="exploration"/>
    <category term="software-testing" label="software testing"/>
    <category term="workshop" label="workshop"/>
  </entry>
</feed>

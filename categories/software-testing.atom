<?xml version='1.0' encoding='UTF-8'?>
<?xml-stylesheet href="https://j19sch.github.io/assets/xml/atom.xsl" type="text/xsl media="all"?>
<feed xml:lang="en" xmlns="http://www.w3.org/2005/Atom">
  <title>Joep Schuurkes (Posts about software testing)</title>
  <id>https://j19sch.github.io/categories/software-testing.atom</id>
  <updated>2021-04-17T13:59:42Z</updated>
  <author>
    <name>Joep Schuurkes</name>
  </author>
  <link rel="self" type="application/atom+xml" href="https://j19sch.github.io/categories/software-testing.atom"/>
  <link rel="alternate" type="text/html" href="https://j19sch.github.io/categories/software-testing/"/>
  <generator uri="https://getnikola.com/">Nikola</generator>
  <entry>
    <title>Reflections on my testing manifesto</title>
    <id>https://j19sch.github.io/blog/2018/reflections-on-my-testing-manifesto/</id>
    <updated>2018-12-22T17:43:10+01:00</updated>
    <published>2018-12-22T17:43:10+01:00</published>
    <author>
      <name>Joep Schuurkes</name>
    </author>
    <link rel="alternate" type="text/html" href="https://j19sch.github.io/blog/2018/reflections-on-my-testing-manifesto/"/>
    <summary type="html">&lt;div&gt;&lt;p&gt;Earlier this month I published my &lt;a href="https://j19sch.github.io/blog/2018/manifesto-for-software-testing/"&gt;Manifesto for software testing&lt;/a&gt;. This manifesto is my attempt to bring together what I have learned about testing from the context-driven, agile and DevOps communities. Below you can find the manifesto with my reflections on it.&lt;/p&gt;
&lt;h5&gt;1. Testing is investigating in order to evaluate a product.&lt;/h5&gt;
&lt;p&gt;This definition is clearly influenced by James Bach's "questioning a product in order to evaluate it". I'm not sure at which point I started misremembering his definition as "investigating a product...", but it works well with a change I did make intentionally: moving "a product" to the second part of the definition. As explained in 6. I believe that in order to evaluate the product, we need to investigate a number of different things, not only the product.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://j19sch.github.io/blog/2018/reflections-on-my-testing-manifesto/"&gt;Read more…&lt;/a&gt; (5 min remaining to read)&lt;/p&gt;&lt;/div&gt;</summary>
    <category term="agile" label="agile"/>
    <category term="context-driven-testing" label="context-driven testing"/>
    <category term="devops" label="devops"/>
    <category term="manifesto" label="manifesto"/>
    <category term="software-testing" label="software testing"/>
  </entry>
  <entry>
    <title>Manifesto for software testing</title>
    <id>https://j19sch.github.io/blog/2018/manifesto-for-software-testing/</id>
    <updated>2018-12-04T20:44:51+01:00</updated>
    <published>2018-12-04T20:44:51+01:00</published>
    <author>
      <name>Joep Schuurkes</name>
    </author>
    <link rel="alternate" type="text/html" href="https://j19sch.github.io/blog/2018/manifesto-for-software-testing/"/>
    <summary type="html">&lt;div&gt;&lt;p&gt;1. Testing is investigating in order to evaluate a product.&lt;/p&gt;
&lt;p&gt;2. An evaluation is a judgement about quality – quality being value to persons who matter.&lt;/p&gt;
&lt;p&gt;3. This makes testing a fundamentally human and contextual activity.&lt;/p&gt;
&lt;p&gt;4. As such, testing is an exploratory and open-ended activity, requiring continuous evaluation of and experimentation with our practices.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://j19sch.github.io/blog/2018/manifesto-for-software-testing/"&gt;Read more…&lt;/a&gt; (1 min remaining to read)&lt;/p&gt;&lt;/div&gt;</summary>
    <category term="agile" label="agile"/>
    <category term="context-driven-testing" label="context-driven testing"/>
    <category term="devops" label="devops"/>
    <category term="manifesto" label="manifesto"/>
    <category term="software-testing" label="software testing"/>
  </entry>
  <entry>
    <title>Information debt</title>
    <id>https://j19sch.github.io/blog/2014/information-debt/</id>
    <updated>2014-07-13T16:50:21+02:00</updated>
    <published>2014-07-13T16:50:21+02:00</published>
    <author>
      <name>Joep Schuurkes</name>
    </author>
    <link rel="alternate" type="text/html" href="https://j19sch.github.io/blog/2014/information-debt/"/>
    <summary type="html">&lt;div&gt;&lt;p&gt;Last week ago the following happened on twitter:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;New word of the day: "information debt". It's like technical debt, but related to information, communication, models, docs, visualisations.&lt;br&gt;
&lt;em&gt;- Joep Schuurkes (@j19sch) &lt;a href="https://twitter.com/j19sch/statuses/486534198803841024"&gt;July 8, 2014&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div&gt;&lt;/div&gt;

&lt;blockquote&gt;
&lt;p&gt;@j19sch: New word of the day: "information debt" =&amp;gt; blogpost coming up ?!?!?&lt;br&gt;
&lt;em&gt;- Simon P. Schrijver (@SimonSaysNoMore) &lt;a href="https://twitter.com/SimonSaysNoMore/statuses/486551279590977536"&gt;July 8, 2014&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div&gt;&lt;/div&gt;

&lt;blockquote&gt;
&lt;p&gt;@SimonSaysNoMore Wasn't planning to, but now you made me think about it, so yes. Damn you! :-P&lt;br&gt;
&lt;em&gt;- Joep Schuurkes (@j19sch) &lt;a href="https://twitter.com/j19sch/statuses/486555404089188352"&gt;July 8, 2014&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;In case you don't know what technical debt is, you might want to read &lt;a href="http://techblog.net-a-porter.com/2011/10/agile-tetris/"&gt;this&lt;/a&gt; first. (It's the oldest source I could find of the technical debt-tetris analogy, by the way. If you know of an older one, please leave a comment.)&lt;/p&gt;
&lt;p&gt;&lt;a href="https://j19sch.github.io/blog/2014/information-debt/"&gt;Read more…&lt;/a&gt; (3 min remaining to read)&lt;/p&gt;&lt;/div&gt;</summary>
    <category term="information-debt" label="information debt"/>
    <category term="software-testing" label="software testing"/>
    <category term="vipt" label="VIPT"/>
  </entry>
  <entry>
    <title>Five leftover thoughts on software testing</title>
    <id>https://j19sch.github.io/blog/2013/five-leftover-thoughts-on-software-testing/</id>
    <updated>2013-08-03T12:28:32+02:00</updated>
    <published>2013-08-03T12:28:32+02:00</published>
    <author>
      <name>Joep Schuurkes</name>
    </author>
    <link rel="alternate" type="text/html" href="https://j19sch.github.io/blog/2013/five-leftover-thoughts-on-software-testing/"/>
    <summary type="html">&lt;div&gt;&lt;p&gt;Defect severity 'Skynet': If this gets to production, we're screwed. Really screwed.&lt;/p&gt;
&lt;p&gt;The problem with templates is that the people who need them shouldn't be writing the document in the first place and that the people who don't need them, have trouble shaking off the vague sense of obligation to adhere to them.&lt;/p&gt;
&lt;p&gt;Happy path application: application that works perfectly fine as long as you stick to the beaten path with your eyes half-closed.&lt;/p&gt;
&lt;p&gt;The contents of a test plan can be divided into the following four categories: good stuff, cover your ass, bullshit, trivialities.&lt;/p&gt;
&lt;p&gt;Buddhist software development: there is no progress, only a never-ending cycle of suffering.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://j19sch.github.io/blog/2013/five-leftover-thoughts-on-software-testing/"&gt;Read more…&lt;/a&gt; (1 min remaining to read)&lt;/p&gt;&lt;/div&gt;</summary>
    <category term="semantics" label="semantics"/>
    <category term="software-testing" label="software testing"/>
    <category term="test-management" label="test management"/>
  </entry>
  <entry>
    <title>Why I dislike test management</title>
    <id>https://j19sch.github.io/blog/2013/why-i-dislike-test-management/</id>
    <updated>2013-07-15T20:10:03+02:00</updated>
    <published>2013-07-15T20:10:03+02:00</published>
    <author>
      <name>Joep Schuurkes</name>
    </author>
    <link rel="alternate" type="text/html" href="https://j19sch.github.io/blog/2013/why-i-dislike-test-management/"/>
    <summary type="html">&lt;div&gt;&lt;p&gt;As I am enjoying these short, not very nuanced, not extremely well thought out blog posts, here’s another one.&lt;/p&gt;
&lt;p&gt;Some people seem to think that it makes sense to think of testing as a project within a project, so they apply project management tools and techniques to testing. This simply doesn’t work.&lt;/p&gt;
&lt;p&gt;Because what are the tools and techniques do they use? A plan with milestones no one is ever going to make as unexpected stuff tends to happen. A budget that is too tight because it’s based on that same plan. Entry criteria that are not met, but never mind, we’re running out of time so you need to start testing anyhow. And finally exit criteria that we fail to meet as well, but hey we’ll go live anyway, because the software really isn’t that bad (or so we hope).&lt;/p&gt;
&lt;p&gt;So in the end, a lot of time and effort is spent on producing documents that are of little use in guiding the actual testing effort. The only thing they do is give some people a warm and fuzzy illusion of control.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://j19sch.github.io/blog/2013/why-i-dislike-test-management/"&gt;Read more…&lt;/a&gt; (1 min remaining to read)&lt;/p&gt;&lt;/div&gt;</summary>
    <category term="software-testing" label="software testing"/>
    <category term="test-management" label="test management"/>
    <category term="test-strategy" label="test strategy"/>
  </entry>
</feed>

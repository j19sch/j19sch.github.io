<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Joep Schuurkes (Posts about context-driven testing)</title><link>https://smallsheds.garden/</link><description></description><atom:link href="https://smallsheds.garden/categories/context-driven-testing.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><copyright>Contents © 2024 &lt;a href="mailto:site@joep.slmail.me"&gt;Joep Schuurkes&lt;/a&gt; 
&lt;a href="https://creativecommons.org/licenses/by/4.0/" rel="nofollow" target="_blank"&gt;
&lt;img alt="Creative Commons License" style="border-width:0;margin: 0px 0px 0px 0px" src="https://licensebuttons.net/l/by/4.0/80x15.png" /&gt;
&lt;/a&gt;
</copyright><lastBuildDate>Sun, 25 Aug 2024 14:42:40 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Test strategy primer</title><link>https://smallsheds.garden/blog/2019/test-strategy-primer/</link><dc:creator>Joep Schuurkes</dc:creator><description>&lt;div&gt;&lt;p&gt;&lt;em&gt;I originally wrote this primer to share with people at work. The first section is intended to be generally applicable; the second not necessarily so. The main influences on this primer are:&lt;/em&gt;&lt;br&gt;
&lt;em&gt;- Rapid Software Testing's &lt;a href="https://www.satisfice.com/tools/htsm.pdf"&gt;Heuristic Test Strategy Model&lt;/a&gt;&lt;/em&gt;&lt;br&gt;
&lt;em&gt;- James Lyndsay's &lt;a href="http://www.workroom-productions.com/papers/Exploration%20and%20Strategy.pdf"&gt;Why Exploration has a place in any Strategy&lt;/a&gt;&lt;/em&gt;&lt;br&gt;
&lt;em&gt;- Rikard Edgren's &lt;a href="http://www.thetesteye.com/papers/TheLittleBlackBookOnTestDesign.pdf"&gt;Little Black Book on Test Design&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;This document contains two sections:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Why have a test strategy? - what is a test strategy and what's its purpose&lt;/li&gt;
&lt;li&gt;Test strategy checklist - checklist for describing your test strategy&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Why have a test strategy?&lt;/h3&gt;
&lt;p&gt;The purpose of a test strategy is to answer the question: "How do we know that what we are building, is good enough?" As such, every team has a test strategy, even if it's only implicitly defined through the actions of the team members.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://smallsheds.garden/blog/2019/test-strategy-primer/"&gt;Read more…&lt;/a&gt; (3 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>context-driven testing</category><category>test management</category><category>test strategy</category><guid>https://smallsheds.garden/blog/2019/test-strategy-primer/</guid><pubDate>Tue, 29 Jan 2019 20:34:19 GMT</pubDate></item><item><title>Reflections on my testing manifesto</title><link>https://smallsheds.garden/blog/2018/reflections-on-my-testing-manifesto/</link><dc:creator>Joep Schuurkes</dc:creator><description>&lt;div&gt;&lt;p&gt;Earlier this month I published my &lt;a href="https://smallsheds.garden/blog/2018/manifesto-for-software-testing/"&gt;Manifesto for software testing&lt;/a&gt;. This manifesto is my attempt to bring together what I have learned about testing from the context-driven, agile and DevOps communities. Below you can find the manifesto with my reflections on it.&lt;/p&gt;
&lt;h5&gt;1. Testing is investigating in order to evaluate a product.&lt;/h5&gt;
&lt;p&gt;This definition is clearly influenced by James Bach's "questioning a product in order to evaluate it". I'm not sure at which point I started misremembering his definition as "investigating a product...", but it works well with a change I did make intentionally: moving "a product" to the second part of the definition. As explained in 6. I believe that in order to evaluate the product, we need to investigate a number of different things, not only the product.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://smallsheds.garden/blog/2018/reflections-on-my-testing-manifesto/"&gt;Read more…&lt;/a&gt; (5 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>agile</category><category>context-driven testing</category><category>devops</category><category>manifesto</category><category>software testing</category><guid>https://smallsheds.garden/blog/2018/reflections-on-my-testing-manifesto/</guid><pubDate>Sat, 22 Dec 2018 16:43:10 GMT</pubDate></item><item><title>Manifesto for software testing</title><link>https://smallsheds.garden/blog/2018/manifesto-for-software-testing/</link><dc:creator>Joep Schuurkes</dc:creator><description>&lt;div&gt;&lt;p&gt;1. Testing is investigating in order to evaluate a product.&lt;/p&gt;
&lt;p&gt;2. An evaluation is a judgement about quality – quality being value to persons who matter.&lt;/p&gt;
&lt;p&gt;3. This makes testing a fundamentally human and contextual activity.&lt;/p&gt;
&lt;p&gt;4. As such, testing is an exploratory and open-ended activity, requiring continuous evaluation of and experimentation with our practices.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://smallsheds.garden/blog/2018/manifesto-for-software-testing/"&gt;Read more…&lt;/a&gt; (1 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>agile</category><category>context-driven testing</category><category>devops</category><category>manifesto</category><category>software testing</category><guid>https://smallsheds.garden/blog/2018/manifesto-for-software-testing/</guid><pubDate>Tue, 04 Dec 2018 19:44:51 GMT</pubDate></item><item><title>Testing maturity in an agile/CDT context</title><link>https://smallsheds.garden/blog/2017/testing-maturity-in-an-agilecdt-context/</link><dc:creator>Joep Schuurkes</dc:creator><description>&lt;div&gt;&lt;p&gt;One day during a team meeting at Joep's previous job at a bank the Team Manager of Testing, listed a number of topics his testers could work on in the coming months. One of those topics was "testing maturity". This topic was on the list not because this manager was such a fan of maturity models, but because the other team managers (Business Analysis and Development) had produced one for their own teams and higher management would like to have one for testing as well. And although Joep saw little value in a classic five-tiered maturity model either, he was intrigued by the question: so what can you do with respect to maturity models that is of value?&lt;/p&gt;
&lt;p&gt;&lt;a href="https://smallsheds.garden/blog/2017/testing-maturity-in-an-agilecdt-context/"&gt;Read more…&lt;/a&gt; (2 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>agile</category><category>context-driven testing</category><category>maturity</category><guid>https://smallsheds.garden/blog/2017/testing-maturity-in-an-agilecdt-context/</guid><pubDate>Sun, 05 Feb 2017 16:43:10 GMT</pubDate></item><item><title>Why the testing/checking debate is so messy - a fruit salad analogy</title><link>https://smallsheds.garden/blog/2015/why-the-testingchecking-debate-is-so-messy-a-fruit-salad-analogy/</link><dc:creator>Joep Schuurkes</dc:creator><description>&lt;div&gt;&lt;p&gt;Five days ago James Thomas posted &lt;a href="https://www.linkedin.com/grp/post/55636-6069749695687770112?trk=groups-post-b-title"&gt;the following&lt;/a&gt; in the Software Testing &amp;amp; Quality Assurance group on LinkedIn:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Are Testing and Checking different or not?&lt;/strong&gt;&lt;br&gt;
This &lt;a href="http://gerrardconsulting.com/?q=node/659"&gt;article by Paul Gerrard&lt;/a&gt; explains why we shouldn't be trying to draw a distinction between checking and testing, but should be paying more attention to the skills of the testers we employ to do the job.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I posted a reply there, but I think I can do better than those initial thoughts, so here we go.&lt;/p&gt;
&lt;p&gt;Let's imagine the following scene: Alice and Bob are preparing a fruit salad together.&lt;br&gt;
&lt;em&gt;Alice&lt;/em&gt;: "Ok, let's make a nice fruit salad. We need some apples and some fruit."&lt;br&gt;
&lt;em&gt;Bob&lt;/em&gt;: "Euh, aren't apples fruit?"&lt;br&gt;
&lt;em&gt;Alice&lt;/em&gt;: "Yes. Of course. But when I say 'fruit', I mean 'non-apple fruit'."&lt;/p&gt;&lt;p&gt;&lt;a href="https://smallsheds.garden/blog/2015/why-the-testingchecking-debate-is-so-messy-a-fruit-salad-analogy/"&gt;Read more…&lt;/a&gt; (3 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>context-driven testing</category><category>semantics</category><category>testing and checking</category><guid>https://smallsheds.garden/blog/2015/why-the-testingchecking-debate-is-so-messy-a-fruit-salad-analogy/</guid><pubDate>Sun, 15 Nov 2015 11:17:12 GMT</pubDate></item><item><title>Two styles of leadership in spreading context-driven testing (TITANconf)</title><link>https://smallsheds.garden/blog/2015/two-styles-of-leadership-in-spreading-context-driven-testing-titanconf/</link><dc:creator>Joep Schuurkes</dc:creator><description>&lt;div&gt;&lt;p&gt;The last weekend of August I spent with some great people - Kristoffer Ankarberg (&lt;a href="https://twitter.com/KrisAnkarberg"&gt;@KrisAnkarberg&lt;/a&gt;), Kristoffer Nordström (&lt;a href="https://twitter.com/kristoffer_nord"&gt;@kristoffer_nord&lt;/a&gt;), Anna Brunell (&lt;a href="https://twitter.com/Anna_Brunell"&gt;@Anna_Brunell&lt;/a&gt;), Fredrik Thuresson (&lt;a href="https://twitter.com/Thure98"&gt;@Thure98&lt;/a&gt;), Maria Kedemo (&lt;a href="https://twitter.com/mariakedemo"&gt;@mariakedemo&lt;/a&gt;), Henrik Andersson (&lt;a href="https://twitter.com/henkeandersson"&gt;@henkeandersson&lt;/a&gt;), Maria Månsson, Amy Philips (&lt;a href="https://twitter.com/ItJustBroke"&gt;@ItJustBroke&lt;/a&gt;), Richard Bradshaw (&lt;a href="https://twitter.com/FriendlyTester"&gt;@FriendlyTester&lt;/a&gt;), Duncan Nisbet (&lt;a href="https://twitter.com/DuncNisbet"&gt;@DuncNisbet&lt;/a&gt;), Alexandru Rotaru (&lt;a href="https://twitter.com/altomalex"&gt;@altomalex&lt;/a&gt;), Oana Casapu, Simon Schrijver (&lt;a href="https://twitter.com/SimonSaysNoMore"&gt;@SimonSaysNoMore&lt;/a&gt;), Zeger Van Hese (&lt;a href="https://twitter.com/TestSideStory"&gt;@TestSideStory&lt;/a&gt;), Helena Jeret-Mäe (&lt;a href="https://twitter.com/HelenaJ_M"&gt;@HelenaJ_M&lt;/a&gt;), Aleksis Tulonen (&lt;a href="https://twitter.com/al3ksis"&gt;@al3ksis&lt;/a&gt;), Anders Dinsen (&lt;a href="https://twitter.com/andersdinsen"&gt;@andersdinsen&lt;/a&gt;) - at the awesome &lt;a href="http://www.karlskronatestgathering.se/titan.html"&gt;TITAN peer conference&lt;/a&gt; in Karlskrona, Sweden.&lt;/p&gt;
&lt;p&gt;During the conference we discussed leadership and testing and on Sunday morning I got the opportunity to tell my story&lt;sup id="fnref:1"&gt;&lt;a class="footnote-ref" href="https://smallsheds.garden/blog/2015/two-styles-of-leadership-in-spreading-context-driven-testing-titanconf/#fn:1"&gt;1&lt;/a&gt;&lt;/sup&gt;. (I do wish I had captured more of the discussion afterwards to include in this blog post.)&lt;/p&gt;
&lt;h3&gt;The first style&lt;/h3&gt;
&lt;p&gt;When thinking about my own leadership in testing, one of the first things that come to mind are my attempts to influence my colleagues at work (testers, developers, project managers) to become more context-driven in their attitude towards testing.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://smallsheds.garden/blog/2015/two-styles-of-leadership-in-spreading-context-driven-testing-titanconf/"&gt;Read more…&lt;/a&gt; (5 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>context-driven testing</category><category>leadership</category><category>peer conferences</category><guid>https://smallsheds.garden/blog/2015/two-styles-of-leadership-in-spreading-context-driven-testing-titanconf/</guid><pubDate>Sun, 06 Sep 2015 17:56:54 GMT</pubDate></item><item><title>What's the word for the part of testing that's not checking?</title><link>https://smallsheds.garden/blog/2015/whats-the-word-for-the-part-of-testing-thats-not-checking/</link><dc:creator>Joep Schuurkes</dc:creator><description>&lt;div&gt;&lt;h3&gt;The question I asked&lt;/h3&gt;
&lt;p&gt;Yesterday &lt;a href="https://twitter.com/j19sch/status/632910141751447552"&gt;I asked on twitter&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Question: what's the proper word for the part of testing that's not checking? #cdt #testing #semantics&lt;br&gt;
- Joep Schuurkes (@j19sch) August 16, 2015&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The reason I asked, is that I noticed I needed that word in discussions about testing and checking. If checking is part of testing - and in the RST namespace it most definitely is, see '&lt;a href="http://www.satisfice.com/blog/archives/856"&gt;Testing and checking refined&lt;/a&gt;' -, then what can I contrast checking with? Contrasting checking with testing (as in 'checking versus testing') isn't going to work: there's one thing that's checking and then there's this other thing, testing, that contains that one thing and some other stuff&lt;sup id="fnref:1"&gt;&lt;a class="footnote-ref" href="https://smallsheds.garden/blog/2015/whats-the-word-for-the-part-of-testing-thats-not-checking/#fn:1"&gt;1&lt;/a&gt;&lt;/sup&gt;, but it's like a completely different thing. See the difference? Conceptually that just doesn't work - at least not in my mind.&lt;/p&gt;
&lt;h3&gt;The answers I got&lt;/h3&gt;
&lt;p&gt;So I figured I'd ask twitter in all its infinite testing wisdom and lo and behold, not only did people reply, a discussion ensued with the following people (listed in no particular order) participating in different configurations: &lt;a href="https://twitter.com/eddybruin"&gt;@eddybruin&lt;/a&gt;, &lt;a href="https://twitter.com/mariakedemo"&gt;@mariakedemo&lt;/a&gt;, &lt;a href="https://twitter.com/SandroIbig"&gt;@SandroIbig&lt;/a&gt;, &lt;a href="https://twitter.com/TestPappy"&gt;@TestPappy&lt;/a&gt;, &lt;a href="https://twitter.com/dwiersma"&gt;@dwiersma&lt;/a&gt;, &lt;a href="https://twitter.com/ilarihenrik"&gt;@ilarihenrik&lt;/a&gt;, &lt;a href="https://twitter.com/PhilipHoeben"&gt;@PhilipHoeben&lt;/a&gt;, &lt;a href="https://twitter.com/huibschoots"&gt;@huibschoots&lt;/a&gt; and &lt;a href="https://twitter.com/deefex"&gt;@deefex&lt;/a&gt;. Thank you all!&lt;/p&gt;
&lt;p&gt;&lt;a href="https://smallsheds.garden/blog/2015/whats-the-word-for-the-part-of-testing-thats-not-checking/"&gt;Read more…&lt;/a&gt; (4 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>context-driven testing</category><category>semantics</category><category>testing and checking</category><guid>https://smallsheds.garden/blog/2015/whats-the-word-for-the-part-of-testing-thats-not-checking/</guid><pubDate>Mon, 17 Aug 2015 18:19:25 GMT</pubDate></item><item><title>Joining the fray on ISO 29119</title><link>https://smallsheds.garden/blog/2014/joining-the-fray-on-iso-29119/</link><dc:creator>Joep Schuurkes</dc:creator><description>&lt;div&gt;&lt;p&gt;For those of you who weren't aware yet: something happened at CAST 2014 regarding the ISO/IEC/IEEE 29119 Software Testing. For instance, first &lt;a href="http://www.youtube.com/watch?v=A721ltyVw3o&amp;amp;list=PLQB4l9iafcelXpJnK6IyDsoFeEb1icqrl"&gt;this&lt;/a&gt; happened, which resulted in &lt;a href="http://www.ipetitions.com/petition/stop29119"&gt;this&lt;/a&gt; and &lt;a href="http://www.professionaltestersmanifesto.org/"&gt;this&lt;/a&gt; and a whole bunch of other initiatives.&lt;/p&gt;
&lt;p&gt;And then someone on twitter (forgot who, apologies) suggested watching Stuard Reid's Eurostar webinar "ISO 29119 – the new set of international standards on software testing" which can be found &lt;a href="https://www.youtube.com/watch?v=c4W-jWRldj0"&gt;here&lt;/a&gt;. Since I liked to learn more about the standard, but not enough to pay almost 500€ to &lt;a href="http://www.nen.nl/Zoekresultaten.htm?q=iso+29119"&gt;NEN&lt;/a&gt; (Dutch standards organisation) for parts 1 to 3, I began watching the webinar.
And truth be told, I didn't watch all of it. Some parts were boring, some parts sounded quite reasonable and some parts I..euh..skipped. And that's ok because all I want to discuss is this one particular quote that begins at 33:25:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://smallsheds.garden/blog/2014/joining-the-fray-on-iso-29119/"&gt;Read more…&lt;/a&gt; (2 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>context-driven testing</category><category>ISO 29119</category><category>test management</category><guid>https://smallsheds.garden/blog/2014/joining-the-fray-on-iso-29119/</guid><pubDate>Sat, 23 Aug 2014 08:04:08 GMT</pubDate></item><item><title>Why I am context-driven</title><link>https://smallsheds.garden/blog/2014/why-i-am-context-driven/</link><dc:creator>Joep Schuurkes</dc:creator><description>&lt;div&gt;&lt;p&gt;&lt;em&gt;(This post was first published on the DEWT site as part of a &lt;a href="https://dewt.wordpress.com/category/why-am-i-context-driven/"&gt;blog post series&lt;/a&gt; by the DEWT members .)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Why am I context-driven? Because it's more fun.&lt;/p&gt;
&lt;p&gt;That's all there is to it.&lt;/p&gt;
&lt;p&gt;Of course I could argue that becoming context-driven has made me a better tester and I do think it has. Yet it's not the reason I became a context-driven tester. Besides, how would I prove it made me a better tester?&lt;/p&gt;
&lt;p&gt;So no, I am context-driven because it's more fun. Because it sees testing as an intellectual challenge. Because it allows human uncertainty to be at the core of what it is. Because it tells me that I'm in charge of what I do and how I do it. Because it encourages me to dive in at the deep end of some complex problem, trusting on my skills to get out on top and enjoying every step of the way.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://smallsheds.garden/blog/2014/why-i-am-context-driven/"&gt;Read more…&lt;/a&gt; (1 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>context-driven testing</category><category>DEWT</category><guid>https://smallsheds.garden/blog/2014/why-i-am-context-driven/</guid><pubDate>Mon, 30 Jun 2014 05:06:21 GMT</pubDate></item><item><title>DEWT3 experience report</title><link>https://smallsheds.garden/blog/2013/dewt3-experience-report/</link><dc:creator>Joep Schuurkes</dc:creator><description>&lt;div&gt;&lt;p&gt;Last weekend the third Dutch Exploratory Workshop in Testing (DEWT3 for short) took place. The ingredients were: a very nice hotel in the woods, lots of talk about testing, beer, whiskey, a small to moderate amount of sleep, stickies and a group of fun and interesting people (You can see them &lt;a href="http://dewt.wordpress.com/2013/04/24/dewt3-experience-reports/"&gt;here&lt;/a&gt;.)&lt;/p&gt;
&lt;p&gt;On Saturday the talks (and thus discussions) were about systems thinking. A few years ago I did read Jerry Weinberg's "An Introduction to General Systems Thinking" and although a very interesting read, w.r.t. to applying it to testing I never got further then: Software is (part of) a system, so you can apply systems thinking to it. Of course, that's very much true, but it's also quite a vague piece of advice.&lt;/p&gt;
&lt;h3&gt;A primer on systems thinking&lt;/h3&gt;
&lt;p&gt;Enter James Bach, who kicked off DEWT3 with a primer on systems thinking. Systems thinking is just a way of thinking - just like logical thinking, analogical thinking, creative thinking, etc. - in which we approach a situation as being a system. So what's a system? It's a set of things in a meaningful interaction with each other.
This definition raises all sorts of questions relevant in systems thinking:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://smallsheds.garden/blog/2013/dewt3-experience-report/"&gt;Read more…&lt;/a&gt; (5 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>context-driven testing</category><category>DEWT</category><category>peer conferences</category><category>systems thinking</category><guid>https://smallsheds.garden/blog/2013/dewt3-experience-report/</guid><pubDate>Sun, 28 Apr 2013 13:32:02 GMT</pubDate></item></channel></rss>
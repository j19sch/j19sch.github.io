<?xml version='1.0' encoding='UTF-8'?>
<?xml-stylesheet href="https://j19sch.github.io/assets/xml/atom.xsl" type="text/xsl media="all"?>
<feed xml:lang="en" xmlns="http://www.w3.org/2005/Atom">
  <title>Joep Schuurkes (Posts about exploration)</title>
  <id>https://j19sch.github.io/categories/cat_exploration.atom</id>
  <updated>2021-12-05T12:36:54Z</updated>
  <author>
    <name>Joep Schuurkes</name>
  </author>
  <link rel="self" type="application/atom+xml" href="https://j19sch.github.io/categories/cat_exploration.atom"/>
  <link rel="alternate" type="text/html" href="https://j19sch.github.io/categories/cat_exploration/"/>
  <generator uri="https://getnikola.com/">Nikola</generator>
  <entry>
    <title>Solving Black Box Puzzle 31 with data analysis</title>
    <id>https://j19sch.github.io/blog/2019/solving-black-box-puzzle-31-with-data-analysis/</id>
    <updated>2019-04-28T13:16:34+02:00</updated>
    <published>2019-04-28T13:16:34+02:00</published>
    <author>
      <name>Joep Schuurkes</name>
    </author>
    <link rel="alternate" type="text/html" href="https://j19sch.github.io/blog/2019/solving-black-box-puzzle-31-with-data-analysis/"/>
    <summary type="html">&lt;div&gt;&lt;p&gt;&lt;a href="https://twitter.com/workroomprds"&gt;James Lyndsay&lt;/a&gt; has created a number of amazing &lt;a href="http://blackboxpuzzles.workroomprds.com/"&gt;Black Box Puzzles&lt;/a&gt;: tiny applications that challenge you to figure out what they do. (You can support him in creating more of these at &lt;a href="https://www.patreon.com/workroomprds"&gt;his Patreon page&lt;/a&gt;.) Two of these Puzzles, &lt;a href="http://blackboxpuzzles.workroomprds.com/puzzle29/"&gt;29&lt;/a&gt; and &lt;a href="http://blackboxpuzzles.workroomprds.com/puzzle31/"&gt;31&lt;/a&gt;, not only have a GUI to explore, but also an API.&lt;/p&gt;
&lt;p&gt;And that gave me an idea. If you explore these Puzzles through their GUI, you start from the inputs. You try out different inputs in the hope of discovering a pattern in the outputs. And then that pattern feeds back into your exploration.&lt;br&gt;
With an API, however - and because of the nature of Puzzle 31 - it becomes easy to get the outputs for all possible combinations of inputs. Which means you can start your exploration from the outputs instead of the inputs.&lt;/p&gt;
&lt;p&gt;Before I tell you how and what I did, three important remarks.&lt;br&gt;
First of all, I will be spoiling the solution to the Puzzle in this blog post. So this is the right moment to go and solve &lt;a href="http://blackboxpuzzles.workroomprds.com/puzzle31/"&gt;Puzzle 31&lt;/a&gt; for yourself first. Or at least go play a bit with it, so you have an idea what the inputs and outputs are.&lt;br&gt;
Secondly, I had already solved the Puzzle through the GUI a few months ago. So it was more of a "Can I find the solution this way as well?" than a "Can I find the solution?" thing.&lt;br&gt;
Finally, the code and the spreadsheet I created (linked throughout, also available on GitHub &lt;a href="https://github.com/j19sch/blackbox-puzzle-31"&gt;here&lt;/a&gt;), are not very clean. I thought about tidying them up, but my two reasons for not doing so are (1) laziness; (2) the way they are now gives a more honest picture of what I did.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://j19sch.github.io/blog/2019/solving-black-box-puzzle-31-with-data-analysis/"&gt;Read more…&lt;/a&gt; (18 min remaining to read)&lt;/p&gt;&lt;/div&gt;</summary>
    <category term="automation" label="automation"/>
    <category term="black-box-puzzle" label="black box puzzle"/>
    <category term="data-analysis" label="data analysis"/>
    <category term="exploration" label="exploration"/>
    <category term="python" label="python"/>
  </entry>
  <entry>
    <title>Some thoughts after attending the 'Getting a Grip on Exploratory Testing' workshop</title>
    <id>https://j19sch.github.io/blog/2012/some-thoughts-after-attending-the-getting-a-grip-on-exploratory-testing-workshop/</id>
    <updated>2012-04-29T19:55:30+02:00</updated>
    <published>2012-04-29T19:55:30+02:00</published>
    <author>
      <name>Joep Schuurkes</name>
    </author>
    <link rel="alternate" type="text/html" href="https://j19sch.github.io/blog/2012/some-thoughts-after-attending-the-getting-a-grip-on-exploratory-testing-workshop/"/>
    <summary type="html">&lt;div&gt;&lt;p&gt;About two weeks ago I attended &lt;a href="http://www.workroom-productions.com/"&gt;James Lyndsay&lt;/a&gt;'s 'Getting a Grip on Exploratory Testing' workshop in Amsterdam. So it's about time to write something about it…&lt;/p&gt;
&lt;p&gt;Now one of the things I dislike about workshop blog posts is that people will say "It was great! And person X is such a good trainer!" without saying much about the content of the workshop. However, I find myself now writing this post and thinking: I shouldn't post a full summary of the workshop. Not that it would spoil too much for any future attendee: most of the workshop consists of exercises and discussion. But posting a summary of the workshop that James has put a lot of effort in to create, just doesn't feel right. So let me just say this: the workshop was great and James is such a good trainer! :-D&lt;/p&gt;
&lt;p&gt;Now that's out of the way, there are a few things from the workshop I'd like to share. Of course, the usual disclaimer applies: these are my thoughts on what was presented during the workshop. Any misrepresentations are my responsibility.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://j19sch.github.io/blog/2012/some-thoughts-after-attending-the-getting-a-grip-on-exploratory-testing-workshop/"&gt;Read more…&lt;/a&gt; (4 min remaining to read)&lt;/p&gt;&lt;/div&gt;</summary>
    <category term="exploration" label="exploration"/>
    <category term="software-testing" label="software testing"/>
    <category term="workshop" label="workshop"/>
  </entry>
  <entry>
    <title>The irony of scripted testing</title>
    <id>https://j19sch.github.io/blog/2012/the-irony-of-scripted-testing/</id>
    <updated>2012-04-09T23:16:17+02:00</updated>
    <published>2012-04-09T23:16:17+02:00</published>
    <author>
      <name>Joep Schuurkes</name>
    </author>
    <link rel="alternate" type="text/html" href="https://j19sch.github.io/blog/2012/the-irony-of-scripted-testing/"/>
    <summary type="html">&lt;div&gt;&lt;p&gt;A bit over a week ago, &lt;a href="https://twitter.com/jamesmarcusbach/status/185816224075227137"&gt;James Bach posted on twitter&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;"This video shows a nice simple contrast between heavy scripted testing and exploratory testing &lt;a href="http://youtu.be/PxTqjAwM2Pw"&gt;http://youtu.be/PxTqjAwM2Pw&lt;/a&gt;"&lt;br&gt;
- James Bach (@jamesmarcusbach) March 30, 2012&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;So I watched the video, hoping to see something that would make me go 'Cool!', but instead I went 'Hmmm.'&lt;/p&gt;
&lt;p&gt;First let me say that this video does get a few things right:&lt;br&gt;
- Exploratory testing can be structured by using charters.&lt;br&gt;
- Exploratory testing allows you to easily change your test approach based on your test results.&lt;br&gt;
- Exploratory testing is very adaptable when confronted with inaccurate or changing requirements.&lt;br&gt;
Yet notice how the above only talks about exploratory testing, because for every thing the video gets right about exploratory testing, it gets something wrong about scripted testing – or rather about how scripted testing works in practice.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://j19sch.github.io/blog/2012/the-irony-of-scripted-testing/"&gt;Read more…&lt;/a&gt; (4 min remaining to read)&lt;/p&gt;&lt;/div&gt;</summary>
    <category term="exploration" label="exploration"/>
    <category term="software-testing" label="software testing"/>
  </entry>
</feed>

<?xml version='1.0' encoding='UTF-8'?>
<?xml-stylesheet href="https://j19sch.github.io/assets/xml/atom.xsl" type="text/xsl media="all"?>
<feed xml:lang="en" xmlns="http://www.w3.org/2005/Atom">
  <title>Joep Schuurkes (Posts about emacs)</title>
  <id>https://j19sch.github.io/categories/emacs.atom</id>
  <updated>2021-02-13T13:10:10Z</updated>
  <author>
    <name>Joep Schuurkes</name>
  </author>
  <link rel="self" type="application/atom+xml" href="https://j19sch.github.io/categories/emacs.atom"/>
  <link rel="alternate" type="text/html" href="https://j19sch.github.io/categories/emacs/"/>
  <generator uri="https://getnikola.com/">Nikola</generator>
  <entry>
    <title>(clj 1) Deciding on a Clojure editor</title>
    <id>https://j19sch.github.io/blog/clojure/2020/clj1-deciding-on-an-editor/</id>
    <updated>2020-05-01T18:00:15+02:00</updated>
    <published>2020-05-01T18:00:15+02:00</published>
    <author>
      <name>Joep Schuurkes</name>
    </author>
    <link rel="alternate" type="text/html" href="https://j19sch.github.io/blog/clojure/2020/clj1-deciding-on-an-editor/"/>
    <summary type="html">&lt;div&gt;&lt;p&gt;The second chapter of "&lt;a href="https://www.braveclojure.com/"&gt;Clojure for the Brave and True&lt;/a&gt;" is all about Emacs, "an excellent Clojure editor". Now you might wonder: does your choice of editor really matter that much? You're learning the language, so you don't need advanced IDE features. Some syntax highlighting, some code completion, something to help you manage all those parantheses perhaps, done. That would be true if not for the Clojure REPL.&lt;/p&gt;
&lt;h3&gt;The Clojure REPL&lt;/h3&gt;
&lt;p&gt;The &lt;a href="https://clojure.org/guides/repl/introduction"&gt;REPL&lt;/a&gt; is definitely a Thing™️ in Clojure. It gives you a prompt where you can type code and it will execute it immediately. You can also load files with code into it, interacting with the functions and data defined in those. So that's a signifcantly faster feedback loop than having to compile and then run - which is how you'd normally run something written in Clojure, since its primary platform is the JVM. There are &lt;a href="https://clojure.org/guides/repl/launching_a_basic_repl"&gt;different ways&lt;/a&gt; of launching a REPL, but most guides I found tell you to use &lt;a href="https://leiningen.org/"&gt;Leiningen&lt;/a&gt;. Oh, and REPL stands for Read-Evaluate-Print_Loop, because that's what the REPL does.&lt;/p&gt;
&lt;p&gt;It definitely feels like this REPL is a bigger deal than I appreciate right now. Probably because I have only just begun learning Clojure. On the other hand, I may have also been spoiled by the quick feedback provided by Python and its &lt;a href="https://docs.python.org/3/library/idle.html"&gt;IDLE&lt;/a&gt;. On the third hand, it's only because of learning of the Clojure REPL, I looked into importing files into Python's IDLE and found out that's indeed a thing it can do.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://j19sch.github.io/blog/clojure/2020/clj1-deciding-on-an-editor/"&gt;Read more…&lt;/a&gt; (5 min remaining to read)&lt;/p&gt;&lt;/div&gt;</summary>
    <category term="clojure" label="clojure"/>
    <category term="emacs" label="emacs"/>
    <category term="vim" label="vim"/>
    <category term="vscode" label="vscode"/>
  </entry>
</feed>

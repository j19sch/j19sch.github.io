<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Joep Schuurkes (Posts about test strategy)</title><link>https://smallsheds.garden/</link><description></description><atom:link href="https://smallsheds.garden/categories/test-strategy.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><copyright>Contents © 2023 &lt;a href="mailto:site@joep.slmail.me"&gt;Joep Schuurkes&lt;/a&gt; 
&lt;a href="https://creativecommons.org/licenses/by/4.0/"&gt;
&lt;img alt="Creative Commons License" style="border-width:0;margin: 0px 0px 0px 0px" src="https://licensebuttons.net/l/by/4.0/80x15.png" /&gt;
&lt;/a&gt;
</copyright><lastBuildDate>Tue, 02 May 2023 19:52:06 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Three thoughts on risk-based testing</title><link>https://smallsheds.garden/blog/2022/three-thoughts-on-risk-based-testing/</link><dc:creator>Joep Schuurkes</dc:creator><description>&lt;div&gt;&lt;p&gt;The past month I've been thinking about risk-based testing. This post collects three thoughts on risk-based testing I kept returning to.&lt;/p&gt;
&lt;h2&gt;If not based on risks, then based on what?&lt;/h2&gt;
&lt;p&gt;About a month ago I &lt;a href="https://twitter.com/j19sch/status/1533760354647523330"&gt;tweeted&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;What are the alternatives to risk-based testing?&lt;br&gt;
Requirements-based? I'd argue that's a subset of risk-based.&lt;br&gt;
Unguided? That's either a bad idea ("we hope to get lucky") or aimed at the risk of unknown unknowns.&lt;br&gt;
Any other options? Because something about the term is bothering me.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;My question was inspired by the &lt;a href="https://smallsheds.garden/slides/rtc2019-testing-types.html#/15/0/1"&gt;"opposite" heuristic&lt;/a&gt; from my talk about &lt;a href="https://smallsheds.garden/slides/rtc2019-testing-types.html#/"&gt;testing types&lt;/a&gt;: if we have some kind of category, what's the name for the things not in that category? Applied to risk-based testing: what's the name for testing that's not risk-based?&lt;/p&gt;
&lt;p&gt;&lt;a href="https://smallsheds.garden/blog/2022/three-thoughts-on-risk-based-testing/"&gt;Read more…&lt;/a&gt; (3 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>coverage</category><category>software testing</category><category>test management</category><category>test strategy</category><guid>https://smallsheds.garden/blog/2022/three-thoughts-on-risk-based-testing/</guid><pubDate>Sun, 17 Jul 2022 09:56:30 GMT</pubDate></item><item><title>Test strategy primer</title><link>https://smallsheds.garden/blog/2019/test-strategy-primer/</link><dc:creator>Joep Schuurkes</dc:creator><description>&lt;div&gt;&lt;p&gt;&lt;em&gt;I originally wrote this primer to share with people at work. The first section is intended to be generally applicable; the second not necessarily so. The main influences on this primer are:&lt;/em&gt;&lt;br&gt;
&lt;em&gt;- Rapid Software Testing's &lt;a href="https://www.satisfice.com/tools/htsm.pdf"&gt;Heuristic Test Strategy Model&lt;/a&gt;&lt;/em&gt;&lt;br&gt;
&lt;em&gt;- James Lyndsay's &lt;a href="http://www.workroom-productions.com/papers/Exploration%20and%20Strategy.pdf"&gt;Why Exploration has a place in any Strategy&lt;/a&gt;&lt;/em&gt;&lt;br&gt;
&lt;em&gt;- Rikard Edgren's &lt;a href="http://www.thetesteye.com/papers/TheLittleBlackBookOnTestDesign.pdf"&gt;Little Black Book on Test Design&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;This document contains two sections:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Why have a test strategy? - what is a test strategy and what's its purpose&lt;/li&gt;
&lt;li&gt;Test strategy checklist - checklist for describing your test strategy&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Why have a test strategy?&lt;/h3&gt;
&lt;p&gt;The purpose of a test strategy is to answer the question: "How do we know that what we are building, is good enough?" As such, every team has a test strategy, even if it's only implicitly defined through the actions of the team members.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://smallsheds.garden/blog/2019/test-strategy-primer/"&gt;Read more…&lt;/a&gt; (3 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>context-driven testing</category><category>test management</category><category>test strategy</category><guid>https://smallsheds.garden/blog/2019/test-strategy-primer/</guid><pubDate>Tue, 29 Jan 2019 20:34:19 GMT</pubDate></item><item><title>Regression testing, it means less than you think</title><link>https://smallsheds.garden/blog/2016/regression-testing-it-means-less-than-you-think/</link><dc:creator>Joep Schuurkes</dc:creator><description>&lt;div&gt;&lt;p&gt;The past weeks I have made several attempts at a blog post about regression testing. About how we use it to refer to different things: tests running on a CI server, people executing test scripts, etc. And about how often the term really doesn't mean much at all, yet nobody questions you when you use it: "What are you doing?" "Regression testing." "Oh good, carry on." The point of the post would be to argue we should use the term 'regression testing' a lot less, because most of the time we can be more specific without having to be more verbose.&lt;/p&gt;
&lt;p&gt;However, the more I thought about (what I would qualify as) proper regression testing, the more I felt that regression versus progression (or progressive) testing is a distinction without difference. One interesting observation in this regard is that "regression testing" returns 30 times more results on Google than "progression testing" and "progressive testing" combined. So what's going on here if we have a dichotomy with one member producing so much more discussion than the other? And there's more: regression testing is commonly contrasted with test types like functional testing and usability testing. But how then should I categorize a regression test focusing on functionality&lt;sup id="fnref:1"&gt;&lt;a class="footnote-ref" href="https://smallsheds.garden/blog/2016/regression-testing-it-means-less-than-you-think/#fn:1"&gt;1&lt;/a&gt;&lt;/sup&gt;?&lt;/p&gt;
&lt;p&gt;&lt;a href="https://smallsheds.garden/blog/2016/regression-testing-it-means-less-than-you-think/"&gt;Read more…&lt;/a&gt; (7 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>regression testing</category><category>semantics</category><category>test management</category><category>test strategy</category><guid>https://smallsheds.garden/blog/2016/regression-testing-it-means-less-than-you-think/</guid><pubDate>Sun, 03 Jan 2016 18:42:26 GMT</pubDate></item><item><title>Why I dislike test management</title><link>https://smallsheds.garden/blog/2013/why-i-dislike-test-management/</link><dc:creator>Joep Schuurkes</dc:creator><description>&lt;div&gt;&lt;p&gt;As I am enjoying these short, not very nuanced, not extremely well thought out blog posts, here’s another one.&lt;/p&gt;
&lt;p&gt;Some people seem to think that it makes sense to think of testing as a project within a project, so they apply project management tools and techniques to testing. This simply doesn’t work.&lt;/p&gt;
&lt;p&gt;Because what are the tools and techniques do they use? A plan with milestones no one is ever going to make as unexpected stuff tends to happen. A budget that is too tight because it’s based on that same plan. Entry criteria that are not met, but never mind, we’re running out of time so you need to start testing anyhow. And finally exit criteria that we fail to meet as well, but hey we’ll go live anyway, because the software really isn’t that bad (or so we hope).&lt;/p&gt;
&lt;p&gt;So in the end, a lot of time and effort is spent on producing documents that are of little use in guiding the actual testing effort. The only thing they do is give some people a warm and fuzzy illusion of control.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://smallsheds.garden/blog/2013/why-i-dislike-test-management/"&gt;Read more…&lt;/a&gt; (1 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>software testing</category><category>test management</category><category>test strategy</category><guid>https://smallsheds.garden/blog/2013/why-i-dislike-test-management/</guid><pubDate>Mon, 15 Jul 2013 18:10:03 GMT</pubDate></item><item><title>Why your Product Risk Analysis isn't</title><link>https://smallsheds.garden/blog/2013/why-your-product-risk-analysis-isnt/</link><dc:creator>Joep Schuurkes</dc:creator><description>&lt;div&gt;&lt;p&gt;Ok, going to try to keep this short and ranty (rantish?).&lt;/p&gt;
&lt;p&gt;Typical test advice is to do a Product Risk Analysis (PRA, mind the capitalisation!) and based on that you decide what to test and how thoroughly. The most common way to do a PRA is with a workshop. Put some people in a room with a lot of stickies, let them list all the risks they can think of and then have them score them. Et voilà, Product Risk Analysis is done!&lt;/p&gt;
&lt;p&gt;But that doesn't really make sense, now does it? If someone were to give you an object and asked you "What could possibly go wrong with this?", what would you do? Gather a bunch of people with some knowledge of the object, yet no actual experience with it and do a workshop imagining things that could go wrong? That's not an Analysis (capital A!), that's a SWAG – a scientific wild ass guess.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://smallsheds.garden/blog/2013/why-your-product-risk-analysis-isnt/"&gt;Read more…&lt;/a&gt; (1 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>test management</category><category>test reporting</category><category>test strategy</category><guid>https://smallsheds.garden/blog/2013/why-your-product-risk-analysis-isnt/</guid><pubDate>Sun, 23 Jun 2013 12:34:36 GMT</pubDate></item></channel></rss>
<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Joep Schuurkes (Posts about test management)</title><link>https://j19sch.github.io/</link><description></description><atom:link href="https://j19sch.github.io/categories/cat_test-management.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><copyright>Contents © 2021 &lt;a href="mailto:j19sch@hey.com"&gt;Joep Schuurkes&lt;/a&gt; 
&lt;a href="http://creativecommons.org/licenses/by/4.0/"&gt;
&lt;img alt="Creative Commons License" style="border-width:0;margin: 0px 0px 0px 0px" src="https://i.creativecommons.org/l/by/4.0/80x15.png" /&gt;
&lt;/a&gt;
</copyright><lastBuildDate>Sat, 08 May 2021 08:53:56 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>It's time to retire our test case management tools</title><link>https://j19sch.github.io/blog/2020/its-time-to-retire-our-test-case-management-tools/</link><dc:creator>Joep Schuurkes</dc:creator><description>&lt;div&gt;&lt;p&gt;Recently the topic of test case management tools popped up a few times in my surroundings. In almost all cases I'd recommend against using these kinds of tools and I found myself able to give a few reasons, but also found that my thoughts lacked the clarity I'd like them to have. Hence this blog post, to force myself to think more deeply and communicate more clearly.&lt;/p&gt;
&lt;p&gt;Before I go into that, there are a few things this blog post is not about. I won't be really going into what effect test cases have on test execution, or rather if test cases are a good tool to use when doing actual testing. Personally I don't think they are and I wrote about my inability to use them in &lt;a href="https://j19sch.github.io/blog/2013/test-cases-cant-do-m-no-more/"&gt;this post from July 2013&lt;/a&gt;. For some deeper thoughts on this, I recommend James Bach's and Aaron Hodder's article "&lt;a href="https://www.testingcircus.com/documents/TestingTrapeze-2014-February.pdf#page=31"&gt;Test cases are not testing: Towards a culture of test performance&lt;/a&gt;".&lt;/p&gt;
&lt;p&gt;What I do want to cover in this post is managing test cases. Having a collection of test cases stored somewhere to re-use across releases and reporting their pass/fail numbers. Both are important use cases for a test case management tool and both are in my opinion a bad idea.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://j19sch.github.io/blog/2020/its-time-to-retire-our-test-case-management-tools/"&gt;Read more…&lt;/a&gt; (12 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>test cases</category><category>test management</category><category>tools</category><guid>https://j19sch.github.io/blog/2020/its-time-to-retire-our-test-case-management-tools/</guid><pubDate>Sun, 19 Jul 2020 14:38:17 GMT</pubDate></item><item><title>Five leftover thoughts on software testing</title><link>https://j19sch.github.io/blog/2013/five-leftover-thoughts-on-software-testing/</link><dc:creator>Joep Schuurkes</dc:creator><description>&lt;div&gt;&lt;p&gt;Defect severity 'Skynet': If this gets to production, we're screwed. Really screwed.&lt;/p&gt;
&lt;p&gt;The problem with templates is that the people who need them shouldn't be writing the document in the first place and that the people who don't need them, have trouble shaking off the vague sense of obligation to adhere to them.&lt;/p&gt;
&lt;p&gt;Happy path application: application that works perfectly fine as long as you stick to the beaten path with your eyes half-closed.&lt;/p&gt;
&lt;p&gt;The contents of a test plan can be divided into the following four categories: good stuff, cover your ass, bullshit, trivialities.&lt;/p&gt;
&lt;p&gt;Buddhist software development: there is no progress, only a never-ending cycle of suffering.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://j19sch.github.io/blog/2013/five-leftover-thoughts-on-software-testing/"&gt;Read more…&lt;/a&gt; (1 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>semantics</category><category>software testing</category><category>test management</category><guid>https://j19sch.github.io/blog/2013/five-leftover-thoughts-on-software-testing/</guid><pubDate>Sat, 03 Aug 2013 10:28:32 GMT</pubDate></item><item><title>Why I dislike test management</title><link>https://j19sch.github.io/blog/2013/why-i-dislike-test-management/</link><dc:creator>Joep Schuurkes</dc:creator><description>&lt;div&gt;&lt;p&gt;As I am enjoying these short, not very nuanced, not extremely well thought out blog posts, here’s another one.&lt;/p&gt;
&lt;p&gt;Some people seem to think that it makes sense to think of testing as a project within a project, so they apply project management tools and techniques to testing. This simply doesn’t work.&lt;/p&gt;
&lt;p&gt;Because what are the tools and techniques do they use? A plan with milestones no one is ever going to make as unexpected stuff tends to happen. A budget that is too tight because it’s based on that same plan. Entry criteria that are not met, but never mind, we’re running out of time so you need to start testing anyhow. And finally exit criteria that we fail to meet as well, but hey we’ll go live anyway, because the software really isn’t that bad (or so we hope).&lt;/p&gt;
&lt;p&gt;So in the end, a lot of time and effort is spent on producing documents that are of little use in guiding the actual testing effort. The only thing they do is give some people a warm and fuzzy illusion of control.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://j19sch.github.io/blog/2013/why-i-dislike-test-management/"&gt;Read more…&lt;/a&gt; (1 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>software testing</category><category>test management</category><category>test strategy</category><guid>https://j19sch.github.io/blog/2013/why-i-dislike-test-management/</guid><pubDate>Mon, 15 Jul 2013 18:10:03 GMT</pubDate></item><item><title>Test cases, can't do 'm no more</title><link>https://j19sch.github.io/blog/2013/test-cases-cant-do-m-no-more/</link><dc:creator>Joep Schuurkes</dc:creator><description>&lt;div&gt;&lt;p&gt;Continuing the style of my previous blog post...&lt;/p&gt;
&lt;p&gt;Some days ago I found myself no longer able to think in test cases while testing. Of course, it's not as if I was using test design techniques to generate test cases one day and woke up the next day to find myself unable to do it anymore. But still, about a week ago I figured I had explored enough to be able to write down the test cases I wanted to execute and found myself staring at a blank page (well ok, empty Excel sheet) feeling alienated from what I was planning to do.&lt;/p&gt;
&lt;p&gt;So what do I mean when saying "thinking in test cases". Simply put, you take a piece of functionality, let a test design technique loose on it and there you go: a set of test cases to execute. Combine test design techniques over the different pieces of functionality as required and you're all covered test strategy-wise. Or that's the idea.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://j19sch.github.io/blog/2013/test-cases-cant-do-m-no-more/"&gt;Read more…&lt;/a&gt; (1 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>exploration</category><category>test cases</category><category>test management</category><guid>https://j19sch.github.io/blog/2013/test-cases-cant-do-m-no-more/</guid><pubDate>Sat, 06 Jul 2013 18:19:32 GMT</pubDate></item></channel></rss>